<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Engineering Health]]></title>
  <link href="http://engineering.cerner.com/atom.xml" rel="self"/>
  <link href="http://engineering.cerner.com/"/>
  <updated>2019-06-14T11:50:43-05:00</updated>
  <id>http://engineering.cerner.com/</id>
  <author>
    <name><![CDATA[Cerner]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[DevAcademy Six Years Later]]></title>
    <link href="http://engineering.cerner.com/blog/devacademy-six-years-later/"/>
    <updated>2019-06-14T00:00:00-05:00</updated>
    <id>http://engineering.cerner.com/blog/devacademy-six-years-later</id>
    <content type="html"><![CDATA[<p>Cerner hires a lot of software engineers.  In fact, we have hired over 1,600 engineers since our early career onboarding program, DevAcademy, went live almost six years ago.  In particular, we use DevAcademy to onboard early career software engineers.</p>

<p>DevAcademy is a three part onboarding program built by engineers for engineers.  The first part of DevAcademy is DevEssentials which covers a lot of the basics new engineers need to know about development ecosystems in our development environment.  After spending a few days hearing from the software engineers who teach DevEssentials, our new hires move into DevCenter.  DevCenter is a performance based, hands-on training opportunity.  Engineers dig into real projects on small teams with the help of experienced mentors from teams across Cerner’s tech stack.  They work through their projects, adding new functionality to existing applications, and honing their craft with the help of the full-time engineering instructors who keep DevAcademy running as well as their mentors.  Over 700 engineers have participated as mentors providing feedback in code reviews, office hours, and scrum on more than 120 different projects.  One engineer said of DevAcademy, “I was able to (and encouraged to) work independently, make decisions and find solutions without always having to seek approval for them. I also got feedback when those decisions turned out to be bad, so I could make better decisions in the future.”  As soon as new engineers are writing, testing, and documenting their code in a way that meets the criteria Cerner has established for new hires, they go to teams across all areas of the company.</p>

<div align="center">
  <table>
    <tr>
      <td align="center">
        <img src="http://engineering.cerner.com/assets/2019-06-14-devacademy-six-years-later/devacademy-1.png" width="600"><br>
        <sub>New engineers working on their projects in the DevCenter</sub>
      </td>
    </tr>
  </table>
</div>


<p>Engineering managers report that DevAcademy engineers are able to make meaningful contributions to their new teams very quickly, usually within two months. Before DevAcademy existed, it would often take six months before a new engineer could provide valuable contributions to their codebase. Engineers go to their new teams already equipped with knowledge of the process, tools, and best practices that are standard across engineering teams at Cerner.</p>

<div align="center">
  <table>
    <tr>
      <td align="center">
        <img src="http://engineering.cerner.com/assets/2019-06-14-devacademy-six-years-later/devacademy-2.png" width="600"><br>
        <sub>Engineers in training participating in their morning stand-up meeting</sub>
      </td>
    </tr>
  </table>
</div>


<p>After joining their teams, new software engineers very quickly dive into the work, learning the architecture and tooling as they go.  When they do need additional training to help level-up their skills, they utilize the third part of DevAcademy, DevElectives.  DevElectives focus on practices and tools engineers have identified as needs for their teams and architectures.  Like DevEssentials, DevElectives are taught by engineers and provide opportunities to hear from more experienced people while digging into new technology.</p>

<p>In addition to providing an optimized orientation to writing code at Cerner, DevAcademy helps people cultivate relationships and networks that they will utilize throughout their careers.  Many groups continue to meet regularly to discuss the work they are doing and get pointers from their colleagues.  One Cerner associate said, “When I first joined Cerner, I had just moved and was alone in a new city. I was apprehensive, but excited. I had no idea that DevAcademy would be so formative to the friendships I created and networks I joined. DevAcademy was where I met my friends, some of whom I can already tell will be lifelong, where I met mentors who became the start of my network, and became inspired to be a mentor to continue expanding my network.”</p>

<div align="center">
  <table>
    <tr>
      <td align="center">
        <img src="http://engineering.cerner.com/assets/2019-06-14-devacademy-six-years-later/devacademy-3.png" width="600"><br>
        <sub>A mentor helps a new associate set up his code review</sub>
      </td>
    </tr>
  </table>
</div>


<p>In many ways, DevAcademy has become a staple of engineering at Cerner.  It is where engineers have a safe space to learn and grow as they begin their career.  It has become a proving ground for exploring new technologies and possibilities, and it gives more advanced engineers a way to improve their leadership skills.  More importantly, it helps Cerner shape its engineering culture; focusing on the future state of engineering and cultivating an environment in which engineers are prepared to join a team and spread the knowledge they have gained during training to improve engineering as a whole.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pi Day 2019: Build Your Own Alarm System]]></title>
    <link href="http://engineering.cerner.com/blog/pi-day-2019-build-your-own-alarm-system/"/>
    <updated>2019-03-14T00:00:00-05:00</updated>
    <id>http://engineering.cerner.com/blog/pi-day-2019-build-your-own-alarm-system</id>
    <content type="html"><![CDATA[<p>At Cerner Engineering, we love to celebrate <a href="https://en.wikipedia.org/wiki/Pi_Day">Pi Day</a>. This day is not only a fun time to enjoy eating pie and reflecting on mathematical properties, but we also share big announcements internally for our developers conference, <a href="https://engineering.cerner.com/blog/devcon-recap/">DevCon</a>.</p>

<div align="center"><blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">Drew a crowd to celebrate Pi Day this afternoon with snacks, lightning talks, and our DevCon 2018 theme reveal! <a href="https://twitter.com/hashtag/314day?src=hash&amp;ref_src=twsrc%5Etfw">#314day</a> <a href="https://twitter.com/hashtag/cernerdevcon?src=hash&amp;ref_src=twsrc%5Etfw">#cernerdevcon</a> <a href="https://t.co/wyy5eLKHVl">pic.twitter.com/wyy5eLKHVl</a></p>&mdash; Cerner Engineering (@CernerEng) <a href="https://twitter.com/CernerEng/status/974023542504411136?ref_src=twsrc%5Etfw">March 14, 2018</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<p>For this post, we thought it would be fun to share a simple example of how you can hook your existing monitoring system to a physical alarm system powered by a <a href="https://www.raspberrypi.org/">Raspberry Pi</a>. This alarm will be a red spinning light, the universal symbol of &ldquo;something is going wrong.&rdquo; We will build a program that will integrate with New Relic to determine if there are issues in our environment. If there are any issues, it will trigger the alarm and your monitoring system will come alive!</p>

<h2>Parts List</h2>

<ul>
<li><a href="https://www.adafruit.com/product/825">Jumper wires</a> &ndash; Wires that we will use to trigger the switch from your GPIO pins.</li>
<li><a href="https://www.amazon.com/Rhode-Island-Novelty-Police-Beacon/dp/B0011CZV5A">Alarm light that is AC powered</a> &ndash; There are several different types of fun alarm or party lights you could use. The important characteristic that we are seeking is an AC powered light, as we will use this to control its state. Many lights you will find are battery powered, which will not work for this example.</li>
<li><a href="https://www.adafruit.com/product/2935">PowerSwitch Tail or alternative</a> &ndash; I have had this setup for quite some time, so I still have a PowerSwitch Tail, but looks like they may not be available by all providers. You can get other alternatives out there, where you can control an AC power switch safely through GPIO interactions.</li>
<li><a href="https://www.raspberrypi.org">Raspberry Pi</a> &ndash; I have an older model, but anything with a powered ethernet connection works well (ex. Raspberry Pi 3 Model B+), as we will be making remote HTTPS calls. If this is your first time getting a Raspberry Pi, there are great kits that include your power adapter and SD card (as you will need that too).</li>
<li>RJ45 ethernet cable <em>(optional)</em> &ndash; We won’t leverage WiFi for this example, and simply use a ethernet cable for maintaining a network connection for the Raspberry Pi. You don’t need this if you already know how you plan to connect your Raspberry Pi to your existing network.</li>
</ul>


<h2>The Alarm</h2>

<p>Once you have this setup, we are going to use the Raspberry Pi to control your AC output by communicating to the PowerSwitch Tail through our <a href="https://www.raspberrypi.org/documentation/usage/gpio/">GPIO pins</a>. A <a href="https://golang.org/">Go program</a> will control the logic of flexing the alarm on or off by polling a monitoring system: <a href="https://newrelic.com/">New Relic</a>. New Relic is a real-time monitoring platform that gives you powerful insights about the applications you are operating. One of the features of New Relic, is that you can build alerts about different indicators of your application (ex. high memory utilization of a service). These can be rolled up to an &ldquo;incident&rdquo; concept, when you have <a href="https://docs.newrelic.com/docs/alerts/new-relic-alerts/configuring-alert-policies/specify-when-new-relic-creates-incidents">a violation on an alert condition</a>. For this physical alarm, it made sense to pair it with this concept that we use from New Relic. Therefore, if you build something that would trigger human engagement with your alerts (like an incident), this alarm can generically pick these up, without you having to manage anything else.</p>

<h2>The Code</h2>

<p>Here is the code snippet of what we will implement. It is a Go program, which will interact with the GPIO pins using <a href="https://github.com/stianeikeland/go-rpio">go-rpio</a>. It will essentially run in a loop, and poll New Relic’s Alert API every minute. To ensure we aren’t running the alarm in the after-hours, we will also flex when this can trigger (ex. Mon &ndash; Friday, 9 &ndash; 5 PM).</p>

<p>First, we will build something that can invoke the <a href="https://rpm.newrelic.com/api/explore/alerts_incidents/list">New Relic Alerts API</a>. This will offer a single function (<code>hasOpenIncidents</code>) that will dictate if there are any open incidents when checking with New Relic.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// New Relic Incident API type (just using including two of the fields as an example)</span>
</span><span class='line'><span class="kd">type</span> <span class="nx">Incident</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">Id</span>       <span class="kt">int</span>   <span class="s">`json:&quot;id&quot;`</span>
</span><span class='line'>  <span class="nx">OpenedAt</span> <span class="kt">int64</span> <span class="s">`json:&quot;opened_at&quot;`</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// New Relic Incident API response type, which we will assess on having any items in the array for the alarm.</span>
</span><span class='line'><span class="kd">type</span> <span class="nx">IncidentsResponse</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">Incidents</span> <span class="p">[]</span><span class="nx">Incident</span> <span class="s">`json:&quot;incidents&quot;`</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Documented here: https://rpm.newrelic.com/api/explore/alerts_incidents/list</span>
</span><span class='line'><span class="kd">func</span> <span class="nx">hasOpenIncidents</span><span class="p">(</span><span class="nx">apiKey</span> <span class="kt">string</span><span class="p">)</span> <span class="kt">bool</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">url</span> <span class="o">:=</span> <span class="s">&quot;https://api.newrelic.com/v2/alerts_incidents.json?only_open=true&quot;</span>
</span><span class='line'>  <span class="nx">spaceClient</span> <span class="o">:=</span> <span class="nx">http</span><span class="p">.</span><span class="nx">Client</span><span class="p">{</span>
</span><span class='line'>      <span class="nx">Timeout</span><span class="p">:</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Second</span> <span class="o">*</span> <span class="mi">15</span><span class="p">,</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">req</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">http</span><span class="p">.</span><span class="nx">NewRequest</span><span class="p">(</span><span class="nx">http</span><span class="p">.</span><span class="nx">MethodGet</span><span class="p">,</span> <span class="nx">url</span><span class="p">,</span> <span class="kc">nil</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">req</span><span class="p">.</span><span class="nx">Header</span><span class="p">.</span><span class="nx">Set</span><span class="p">(</span><span class="s">&quot;X-Api-Key&quot;</span><span class="p">,</span> <span class="nx">apiKey</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">res</span><span class="p">,</span> <span class="nx">getErr</span> <span class="o">:=</span> <span class="nx">spaceClient</span><span class="p">.</span><span class="nx">Do</span><span class="p">(</span><span class="nx">req</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// If there is a failure to calling New Relic (ex. timeout), simply logging and returning back</span>
</span><span class='line'>  <span class="c1">// for a later retry</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">getErr</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">log</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Failed to get a response: %s&quot;</span><span class="p">,</span> <span class="nx">getErr</span><span class="p">)</span>
</span><span class='line'>      <span class="k">return</span> <span class="kc">false</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">incidentsResponse</span> <span class="o">:=</span> <span class="nx">IncidentsResponse</span><span class="p">{}</span>
</span><span class='line'>  <span class="nx">jsonError</span> <span class="o">:=</span> <span class="nx">json</span><span class="p">.</span><span class="nx">NewDecoder</span><span class="p">(</span><span class="nx">res</span><span class="p">.</span><span class="nx">Body</span><span class="p">).</span><span class="nx">Decode</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">incidentsResponse</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">jsonError</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">jsonError</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="nb">len</span><span class="p">(</span><span class="nx">incidentsResponse</span><span class="p">.</span><span class="nx">Incidents</span><span class="p">)</span> <span class="p">&gt;</span> <span class="mi">0</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>We will then manage the GPIO pin state in a simple loop which will check to see if there are any open incidents. If so, it will set the pin to <em>High</em>, which will trigger the light switch. Otherwise it will set it to low. We will also include a handler for setting the pin to low when we terminate the application (ex. via a SIGTERM). Example of managing the state:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'>   <span class="c1">// If there are any open New Relic incidents, set the pin to high</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">hasOpenIncidents</span><span class="p">(</span><span class="nx">apiKey</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">log</span><span class="p">.</span><span class="nx">Print</span><span class="p">(</span><span class="s">&quot;Incidents detected, setting alarm.&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">pin</span><span class="p">.</span><span class="nx">High</span><span class="p">()</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">log</span><span class="p">.</span><span class="nx">Print</span><span class="p">(</span><span class="s">&quot;No incidents detected.&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">pin</span><span class="p">.</span><span class="nx">Low</span><span class="p">()</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>When you put it all together, the full picture of code looks like this (<code>alarm.go</code>):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;encoding/json&quot;</span>
</span><span class='line'>  <span class="s">&quot;github.com/spf13/viper&quot;</span>
</span><span class='line'>  <span class="s">&quot;github.com/stianeikeland/go-rpio&quot;</span>
</span><span class='line'>  <span class="s">&quot;log&quot;</span>
</span><span class='line'>  <span class="s">&quot;net/http&quot;</span>
</span><span class='line'>  <span class="s">&quot;os&quot;</span>
</span><span class='line'>  <span class="s">&quot;os/signal&quot;</span>
</span><span class='line'>  <span class="s">&quot;syscall&quot;</span>
</span><span class='line'>  <span class="s">&quot;time&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// New Relic Incident API type (just using including two of the fields as an example)</span>
</span><span class='line'><span class="kd">type</span> <span class="nx">Incident</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">Id</span>       <span class="kt">int</span>   <span class="s">`json:&quot;id&quot;`</span>
</span><span class='line'>  <span class="nx">OpenedAt</span> <span class="kt">int64</span> <span class="s">`json:&quot;opened_at&quot;`</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// New Relic Incident API response type, which we will assess on having any items in the array for the alarm.</span>
</span><span class='line'><span class="kd">type</span> <span class="nx">IncidentsResponse</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">Incidents</span> <span class="p">[]</span><span class="nx">Incident</span> <span class="s">`json:&quot;incidents&quot;`</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Documented here: https://rpm.newrelic.com/api/explore/alerts_incidents/list</span>
</span><span class='line'><span class="kd">func</span> <span class="nx">hasOpenIncidents</span><span class="p">(</span><span class="nx">apiKey</span> <span class="kt">string</span><span class="p">)</span> <span class="kt">bool</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">url</span> <span class="o">:=</span> <span class="s">&quot;https://api.newrelic.com/v2/alerts_incidents.json?only_open=true&quot;</span>
</span><span class='line'>  <span class="nx">spaceClient</span> <span class="o">:=</span> <span class="nx">http</span><span class="p">.</span><span class="nx">Client</span><span class="p">{</span>
</span><span class='line'>      <span class="nx">Timeout</span><span class="p">:</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Second</span> <span class="o">*</span> <span class="mi">15</span><span class="p">,</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">req</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">http</span><span class="p">.</span><span class="nx">NewRequest</span><span class="p">(</span><span class="nx">http</span><span class="p">.</span><span class="nx">MethodGet</span><span class="p">,</span> <span class="nx">url</span><span class="p">,</span> <span class="kc">nil</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">req</span><span class="p">.</span><span class="nx">Header</span><span class="p">.</span><span class="nx">Set</span><span class="p">(</span><span class="s">&quot;X-Api-Key&quot;</span><span class="p">,</span> <span class="nx">apiKey</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">res</span><span class="p">,</span> <span class="nx">getErr</span> <span class="o">:=</span> <span class="nx">spaceClient</span><span class="p">.</span><span class="nx">Do</span><span class="p">(</span><span class="nx">req</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// If there is a failure to calling New Relic (ex. timeout), simply logging and returning back</span>
</span><span class='line'>  <span class="c1">// for a later retry</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">getErr</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">log</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Failed to get a response: %s&quot;</span><span class="p">,</span> <span class="nx">getErr</span><span class="p">)</span>
</span><span class='line'>      <span class="k">return</span> <span class="kc">false</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">incidentsResponse</span> <span class="o">:=</span> <span class="nx">IncidentsResponse</span><span class="p">{}</span>
</span><span class='line'>  <span class="nx">jsonError</span> <span class="o">:=</span> <span class="nx">json</span><span class="p">.</span><span class="nx">NewDecoder</span><span class="p">(</span><span class="nx">res</span><span class="p">.</span><span class="nx">Body</span><span class="p">).</span><span class="nx">Decode</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">incidentsResponse</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">jsonError</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">log</span><span class="p">.</span><span class="nx">Fatal</span><span class="p">(</span><span class="nx">jsonError</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="nb">len</span><span class="p">(</span><span class="nx">incidentsResponse</span><span class="p">.</span><span class="nx">Incidents</span><span class="p">)</span> <span class="p">&gt;</span> <span class="mi">0</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Simple handler to set the pin to a LOW signal when terminating the application</span>
</span><span class='line'><span class="kd">func</span> <span class="nx">closeHandler</span><span class="p">(</span><span class="nx">pin</span> <span class="nx">rpio</span><span class="p">.</span><span class="nx">Pin</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">c</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="nx">os</span><span class="p">.</span><span class="nx">Signal</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">signal</span><span class="p">.</span><span class="nx">Notify</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span> <span class="nx">os</span><span class="p">.</span><span class="nx">Interrupt</span><span class="p">,</span> <span class="nx">syscall</span><span class="p">.</span><span class="nx">SIGTERM</span><span class="p">)</span>
</span><span class='line'>  <span class="k">go</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="o">&lt;-</span><span class="nx">c</span>
</span><span class='line'>      <span class="nx">log</span><span class="p">.</span><span class="nx">Print</span><span class="p">(</span><span class="s">&quot;SIGTERM detected, setting pin off&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">pin</span><span class="p">.</span><span class="nx">Low</span><span class="p">()</span>
</span><span class='line'>      <span class="nx">os</span><span class="p">.</span><span class="nx">Exit</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}()</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// Load configuration</span>
</span><span class='line'>  <span class="nx">viper</span><span class="p">.</span><span class="nx">SetConfigName</span><span class="p">(</span><span class="s">&quot;config&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">viper</span><span class="p">.</span><span class="nx">AddConfigPath</span><span class="p">(</span><span class="s">&quot;.&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">configErr</span> <span class="o">:=</span> <span class="nx">viper</span><span class="p">.</span><span class="nx">ReadInConfig</span><span class="p">()</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">configErr</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">log</span><span class="p">.</span><span class="nx">Panicf</span><span class="p">(</span><span class="s">&quot;Fatal error config file: %s \n&quot;</span><span class="p">,</span> <span class="nx">configErr</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">apiKey</span> <span class="o">:=</span> <span class="nx">viper</span><span class="p">.</span><span class="nx">GetString</span><span class="p">(</span><span class="s">&quot;new_relic.api_key&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Setup GPIO pin</span>
</span><span class='line'>  <span class="nx">log</span><span class="p">.</span><span class="nx">Print</span><span class="p">(</span><span class="s">&quot;Opening GPIO&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">err</span> <span class="o">:=</span> <span class="nx">rpio</span><span class="p">.</span><span class="nx">Open</span><span class="p">()</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">log</span><span class="p">.</span><span class="nx">Panic</span><span class="p">(</span><span class="s">&quot;Unable to open GPIO&quot;</span><span class="p">,</span> <span class="nx">err</span><span class="p">.</span><span class="nx">Error</span><span class="p">())</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">defer</span> <span class="nx">rpio</span><span class="p">.</span><span class="nx">Close</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Mapping to BCM2835 pin 18, which is the physical 12 pin. For more information about pin mapping, you can see</span>
</span><span class='line'>  <span class="c1">// how these are being mapped: https://github.com/stianeikeland/go-rpio/blob/v4.4.0/rpio.go#L35-L59</span>
</span><span class='line'>  <span class="nx">pin</span> <span class="o">:=</span> <span class="nx">rpio</span><span class="p">.</span><span class="nx">Pin</span><span class="p">(</span><span class="mi">18</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">pin</span><span class="p">.</span><span class="nx">Output</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">closeHandler</span><span class="p">(</span><span class="nx">pin</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">for</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// If it is after-hours, don&#39;t worry about triggering the alarm (trigger during: Mon - Fri, 9 - 5)</span>
</span><span class='line'>      <span class="nx">t</span> <span class="o">:=</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Now</span><span class="p">()</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">Weekday</span><span class="p">()</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="nx">t</span><span class="p">.</span><span class="nx">Weekday</span><span class="p">()</span> <span class="o">&lt;=</span> <span class="mi">5</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">Hour</span><span class="p">()</span> <span class="p">&lt;</span> <span class="mi">9</span> <span class="o">||</span> <span class="nx">t</span><span class="p">.</span><span class="nx">Hour</span><span class="p">()</span> <span class="p">&gt;</span> <span class="mi">17</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">pin</span><span class="p">.</span><span class="nx">Low</span><span class="p">()</span>
</span><span class='line'>          <span class="nx">log</span><span class="p">.</span><span class="nx">Print</span><span class="p">(</span><span class="s">&quot;After hours, sleeping for 5 minutes before continuing...&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">5</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Minute</span><span class="p">)</span>
</span><span class='line'>          <span class="k">continue</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// If there are any open New Relic incidents, set the pin to high</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">hasOpenIncidents</span><span class="p">(</span><span class="nx">apiKey</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">log</span><span class="p">.</span><span class="nx">Print</span><span class="p">(</span><span class="s">&quot;Incidents detected, setting alarm.&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">pin</span><span class="p">.</span><span class="nx">High</span><span class="p">()</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">log</span><span class="p">.</span><span class="nx">Print</span><span class="p">(</span><span class="s">&quot;No incidents detected.&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">pin</span><span class="p">.</span><span class="nx">Low</span><span class="p">()</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">1</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Minute</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Building</h3>

<p>For my example, I have this in a <code>alarm.go</code> file within my <code>nr-pi-alarm</code> directory. I then issue the following command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>env <span class="nv">GOOS</span><span class="o">=</span>linux <span class="nv">GOARCH</span><span class="o">=</span>arm <span class="nv">GOARM</span><span class="o">=</span>5 go build
</span></code></pre></td></tr></table></div></figure>


<p>This will produce a <code>nr-pi-alarm</code> you can then transfer to your Raspberry Pi for execution. One example of doing this is with <code>scp</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Will transfer it to the alarm directory for the pi user on the Raspberry Pi</span>
</span><span class='line'>scp nr-pi-alarm pi@INSERT_YOUR_RASPBERRY_PI_IP_ADDRESS:alarm
</span></code></pre></td></tr></table></div></figure>


<h3>Wiring it up</h3>

<p>For this example, we are using the physical pins #12 and #14 (GPIO18 and GND). We will use our jumper wires to then hook this to the AC switch:</p>

<p><img class="center" src="http://engineering.cerner.com/assets/2019-03-14-pi-day-2019-build-your-own-alarm-system/pi-alarm-gpio.jpg" width="600"></p>

<p><img class="center" src="http://engineering.cerner.com/assets/2019-03-14-pi-day-2019-build-your-own-alarm-system/pi-alarm-switch.jpg" width="600"></p>

<p>You will then hook your alarm light to the AC switch (PowerSwitch Tail). If the alarm light has its own on/off switch, turn it to on, as we don&rsquo;t want this manual switch to block what our Raspberry Pi is going to control based on the flow of power.</p>

<p><img class="center" src="http://engineering.cerner.com/assets/2019-03-14-pi-day-2019-build-your-own-alarm-system/pi-alarm-setup.jpg" width="600"></p>

<h3>Run it</h3>

<p>After you have transferred the build to your pi, you can then configure the alarm to use your New Relic account. This is achieved by creating a <code>config.yml</code> file in your <code>alarm</code> directory which currently hosts the <code>nr-pi-alarm</code> program (set to <code>600</code> for file permissions):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">new_relic</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">api_key</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">INSERT_NEW_RELIC_API_KEY_HERE</span>
</span></code></pre></td></tr></table></div></figure>


<p>After you have configured it, simply invoke this to run the alarm:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>./nr-pi-alarm
</span><span class='line'>2019/03/14 10:04:12 Opening GPIO
</span><span class='line'>2019/03/14 10:04:26 Incidents detected, setting alarm.
</span></code></pre></td></tr></table></div></figure>


<p><img class="center" src="http://engineering.cerner.com/assets/2019-03-14-pi-day-2019-build-your-own-alarm-system/alarm.gif"></p>

<h2>Happy Pi Day</h2>

<p>We hope you are having a great Pi Day and maybe this example will give you other ideas of what you can build to bring your systems alive. 😀</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ShipIt XIV]]></title>
    <link href="http://engineering.cerner.com/blog/shipit-xiv/"/>
    <updated>2019-03-08T00:00:00-06:00</updated>
    <id>http://engineering.cerner.com/blog/shipit-xiv</id>
    <content type="html"><![CDATA[<p>It is winter time in Kansas City, which also included our fourteenth edition of ShipIt, our routine hackathon competition we host at Cerner Engineering. Although the snowy weather may have kept participants between the warm walls of our Innovations Campus, the winter storm did not disturb the initiative and enthusiasm of the fourteen participating teams.
Check out the video below to hear from ShipIt Day participants and supporters as to why ShipIt Day has become an engineering-wide program that supports Cerner’s development culture.</p>

<div align="center">
  <iframe width="560" height="315" src="https://www.youtube.com/embed/uNo5666TPaA" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
</div>


<h2>The Winning ShipIt Day XIV Teams</h2>

<p>1st Place- Bravo Avocado (Max Schroeder, Jacob Zimmermann, Jan Monterrubio)</p>

<p><img class="center" src="http://engineering.cerner.com/assets/2019-03-08-shipit-xiv/shipit-xiv-1.jpg" width="600"></p>

<blockquote><p>“We created &ldquo;HCCgle&rdquo; (pronounced &ldquo;WHO-gull&rdquo;), a search application for looking up HCC information by <a href="https://en.wikipedia.org/wiki/ICD-10">ICD-10</a> diagnosis code (e.g. &ndash; &ldquo;E13.11&rdquo;) or by term (e.g. &ndash; &ldquo;Diabetes mellitus&rdquo;), including across physician-friendly terminologies like <a href="https://en.wikipedia.org/wiki/Intelligent_Medical_Objects">IMO</a> and <a href="https://en.wikipedia.org/wiki/Systematized_Nomenclature_of_Medicine">SNOMED</a> CT. The app presented which HCC categories the requested term belongs to (if any) and shows how its categorization in the HCC specification has changed over time between revisions. This was created using Java, React, and DropWizard as well as an Oracle database. Our primary use case for this project is for aiding support troubleshooting, as there was not a good way to find the HCC codes used in production.” – Bravo Avocado</p></blockquote>

<p>2nd Place- Risky Salt (Kevin Eilers, Ryan Rickard, Pepper Pancoast)</p>

<p><img class="center" src="http://engineering.cerner.com/assets/2019-03-08-shipit-xiv/shipit-xiv-2.jpg" width="600"></p>

<blockquote><p>“We created an innovation/strategic roadmap prototype for Cerner&rsquo;s clients that shows past, current and future projects, along with crucial data points for each. The data was directly from a Microsoft SQL server that houses all of our project management data, and the application was built on Ruby on Rails and React.”– Risky Salt</p></blockquote>

<p>3rd Place- All the Data (Taylor Clay, Bilal Ahmad, Eric Ringle)</p>

<p><img class="center" src="http://engineering.cerner.com/assets/2019-03-08-shipit-xiv/shipit-xiv-3.jpg" width="600"></p>

<blockquote><p>“Our team worked on a prototype of a real-time flow sheet, that was a customizable data visualization tool for patient device data. In the real world, this would be used to view trends in a patient’s health to proactively identify risks. The goal of this project was to build a prototype UI support a dense flow sheet and graphical view of critical care data. This would include Cerner <a href="https://www.cerner.com/pages/careaware">CareAware iBus</a> and <a href="https://www.cerner.com/solutions/health-systems">Cerner Millennium</a> data sources, as well as, understand complexity to better gauge what functions to bring into the solution. This was created using <a href="https://nodered.org/">Node-RED</a> (created a mock service that published data to the app) and React (the application UI).” – All the Data</p></blockquote>

<h2>People’s Choice Award Winners</h2>

<div align="center">
  <table>
    <tr>
      <td align="center">
        <img src="http://engineering.cerner.com/assets/2019-03-08-shipit-xiv/shipit-xiv-4.jpg" width="400"><br>
        <sub>Best Team Name - :(){:|:&};:<br> (Ian Kottman, Sam Livingston, Paul Dennis, Bobby Ryterski, Anthony Ross)</sub>
      </td>
      <td align="center">
        <img src="http://engineering.cerner.com/assets/2019-03-08-shipit-xiv/shipit-xiv-5.jpg" width="400"><br>
        <sub>Best Presentation - Ship O&#8217;Holics <br>(Sowmya Mathukumalli, Shrutha Kashyap, Yasho Jhamvar, Tejendra Velaga)</sub>
      </td>
    </tr>
  </table>
</div>


<p></p>

<p>Thank you to our talented judges Ben York, Adilson Ribeiro, and Scott Julius. Thank you to <a href="https://twitter.com/kylesharpe">Kyle Harper</a> for taking awesome pictures throughout our event.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DevCon: A Tech Conference for Engineering, by Engineering]]></title>
    <link href="http://engineering.cerner.com/blog/devcon-recap/"/>
    <updated>2019-02-08T00:00:00-06:00</updated>
    <id>http://engineering.cerner.com/blog/devcon-recap</id>
    <content type="html"><![CDATA[<p>In 2010 a group of Cerner engineers went to their leadership with an idea: a Cerner tech conference just for the internal development community, built and run from the ground up. The idea for a conference like this had been brewing at Cerner for several years. It was seen as an opportunity to create a large scale, sharing and learning experience for associates in Cerner&rsquo;s technical workforces.</p>

<p>From the beginning, buy-in from leadership was essential for the conference to succeed. In their original pitch, these engineers demonstrated how DevCon would create opportunities for knowledge sharing, networking, and collapsing long standing organizational silos by placing the teaching and learning opportunities into associates’ hands. The idea of associates getting together to share experiences  and lessons learned around topics they were genuinely passionate about resonated right away as an intrinsic benefit to the company. Leadership’s support combined with the efforts of associates driving the conference forward year to year have pushed DevCon to an entirely new level since 2011.</p>

<p>The first DevCon had 600 attendees, all in Kansas City; now DevCon spans three locations &ndash; Kansas City, MO; Malvern, PA; and Bangalore, India &ndash; and in 2018 hosted over 7,500 attendees.  The three experiences included 25 corporate sponsors, over 150 unique, associate-led sessions, and 5 keynote sessions delivered by industry thought leaders. Each year involves a new quirky visual theme, ranging from 8-bit vintage video games to large film and book franchises like Star Wars and Marvel Comics.</p>

<p>In addition to the keynotes and breakout sessions, attendees are given the opportunity to mingle and network with coworkers through trivia night, a social, lightning talks, and quick breaks for lunch and snacks throughout the day.  Also, DevCon is fun. It’s two days to step away from your desk and become immersed in a creative, accepting, and open environment.</p>

<div align="center">
   <iframe width="560" height="315" src="https://www.youtube.com/embed/8FR0tO1-1rk" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
</div>


<p>DevCon is a great example of the work that can be done across a wide variety of groups collaborating, allowing us to create something amazing. Some of these groups include:</p>

<ul>
<li>Presenters. Cerner has an amazing community of people who step up and share their stories, trials, ideas, and new information. The presentations are the core of what makes this conference a success and topic tracks range from devops and experiences with bleeding edge programming languages/frameworks, to people skills and UX design.</li>
<li>A group of user experience designers that put an impressive level of thought and consideration into the aesthetics of the space, the flow of the event, and the promotional materials used before, during, and after the event.</li>
<li>Organizers and volunteers who put their heart into choosing the right talks, training presenters, recruiting keynote speakers, choosing menus, organizing activities, marketing sessions, and helping attendees be at the right place at the right time. It takes a lot of work on the ground to get this thing going, then to successfully recreate it year after year.</li>
</ul>


<p>See some of our favorite DevCon talks over the years on our CernerEng YouTube channel:</p>

<ul>
<li><p><a href="https://www.youtube.com/watch?v=5Aabg_IpXpk">The Power of Pranks with Carl Chesser and Cornel Codrea</a></p></li>
<li><p><a href="https://www.youtube.com/watch?v=1d-Hx7v36ng">Leagues of Sea &amp; Sky with Dr. Jeff Norris</a></p></li>
<li><p><a href="https://www.youtube.com/watch?v=ecjvI-CbR60">Live Coding the Intersection Between the Arts, Research and Education with Sam Aaron</a></p></li>
<li><p><a href="https://www.youtube.com/watch?v=vZpt1lHYTNE">Don&rsquo;t Blink &ndash; a Pursuit in Cognitive Bias with Brandy Poiry &amp; Michelle Brush</a></p></li>
<li><p><a href="https://www.youtube.com/watch?v=0zqBlRW_6jA">Less Risk Through Greater Humanity with Dave Rensin</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2^5 Coding Competition 2018]]></title>
    <link href="http://engineering.cerner.com/blog/2-to-the-5th-coding-competition-2018/"/>
    <updated>2018-12-14T00:00:00-06:00</updated>
    <id>http://engineering.cerner.com/blog/2-to-the-5th-coding-competition-2018</id>
    <content type="html"><![CDATA[<p>At Cerner, associates are always encouraged to develop tools and methods to improve their productivity. With this year&rsquo;s theme being &ldquo;Engineering Productivity,&rdquo; Cerner&rsquo;s fourth annual <a href="https://engineering.cerner.com/blog/2-to-the-5th-coding-competition-2017/">2<sup>5</sup> Coding Competition</a> provided associates another opportunity to dive into this subject and get involved in <a href="https://engineering.cerner.com/culture/">Cerner&rsquo;s development culture</a>.</p>

<p>As usual, this year&rsquo;s 2<sup>5</sup> Coding Competition was kicked off alongside Programmer&rsquo;s Day festivities on September 13th. The competition lasts 32 days, and associates are encouraged to submit code every day. During this year&rsquo;s competition, over 200 code snippet submissions in a total of 59 different languages marked another successful run of the competition. This year the participants were judged based on the following categories:</p>

<ul>
<li><strong>Best Representation</strong>: What captures the concept of &ldquo;engineering productivity&rdquo; the best?</li>
<li><strong>Most Obfuscated</strong>: Which code snippet was the most difficult to understand?</li>
<li><strong>Greatest Variety in Languages</strong>: Which repository contained the most variety in programming languages across submissions?</li>
</ul>


<p>Even though each submission had to be 32 lines of code or less, it didn&rsquo;t stop the participants from brainstorming and executing great ideas ranging from <a href="https://jenkins.io/doc/book/pipeline/">Jenkins Pipelines</a>, creating shell commands, and automating tasks for the tools we use every day. The many entries received exemplified how easy it is to increase productivity in an engineer&rsquo;s daily life with just a few lines of code.</p>

<p><img class="center" src="http://engineering.cerner.com/assets/2018-12-14-2-to-the-5th-coding-competition-2018/2-to-the-5th-2018-1.jpeg"></p>

<h2>My Experience</h2>

<p>As a participant, my biggest takeaway from this event was the learning experience it provided me. I was able to not only expand my skill set by working on the projects that I was passionate about, but also learn about different technologies. I found myself often inspired by reading through other participants&#8217; submissions. The restriction of 32 lines of code drove all of us as participants to write clean and concise solutions. It also made learning from each other&rsquo;s code snippets fun and straightforward. This event also helped me understand how easy it is to find new project ideas. Some ways participants could easily get inspired include discovering a new library heard about in a <a href="https://www.youtube.com/user/CernerEng">Tech Talk</a>, a cool new framework that your team started using, or even a complaint about how difficult it is to use a tool. All these things can inspire and drive participants to develop projects that are going to enhance their own personal knowledge about the new technologies or even help improve other people&rsquo;s work efficiency.</p>

<p>By combining the newly learned technologies and the inspirations I found, I was able to develop tools that make my daily work easier. By learning how to develop chrome extensions, I automated some steps in our timesheet submission system including automatically adding holiday timecode. Furthermore, by researching the ins and outs of shell scripting, I simplified various tasks in command line that would otherwise be complicated to execute. During the competition, I benefited from code snippets submitted by other 2<sup>5</sup> participants such as a bat file that enables users to open the GitHub repository URL from the local git repo. 2<sup>5</sup> provides a platform for anyone who wants to learn and share ideas, and it doesn&rsquo;t require big time commitments. I believe it is a perfect opportunity for our engineers to get involved and innovate.</p>

<h3>The Winners</h3>

<h4>Best Representation: <a href="https://github.com/saqiurila">Jenny Saqiurila</a></h4>

<p>The judges agreed that Jenny&rsquo;s collection of submissions were most closely aligned to the 2018 2<sup>5</sup> theme of &ldquo;Engineering Productivity.” Specifically, the judges noted the high usability of her automated timesheet submission tool.</p>

<h4>Most Obfuscated: <a href="https://github.com/mithuns">Mithun Singh</a></h4>

<p>Mithun captured the award for the Most Obfuscated submission using an esoteric programming language that was comprised of symbols that outputted &ldquo;Hello World.” None of our judges were familiar with this language and found his submission impressive, yet confusing.</p>

<h4>Greatest Variety in Languages: <a href="https://github.com/susmitha-anandarao">Susmitha Anandarao</a></h4>

<p>As the 2<sup>5</sup> competition runs for 32 days, the maximum number of languages that could be used by a participant is 32 languages. Susmita was named this category winner because she submitted all 32 days worth of code and used 32 different languages.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ShipIt XIII]]></title>
    <link href="http://engineering.cerner.com/blog/shipit-xiii/"/>
    <updated>2018-11-16T00:00:00-06:00</updated>
    <id>http://engineering.cerner.com/blog/shipit-xiii</id>
    <content type="html"><![CDATA[<h2>What does it take to be awarded the ShipIt Day Golden Keyboard?</h2>

<div align="center">
   <img class="center" src="http://engineering.cerner.com/assets/2018-11-16-shipit-xiii/shipit-xiii-1.jpg" width="300">
</div>


<p>ShipIt Day XIII concluded last week after an intense 24-hours of brainstorming, building, and presenting. Various projects were completed by Cerner associates across twelve diverse organizations. ShipIt Day XIII&rsquo;s projects were some of the most technically advanced this competition has ever seen.</p>

<p>Awarding the Golden Keyboard is no easy job for our judges. Back in 2014, the trophy was created to provide the winning team with a memento that was unique and grew with the competition. Every competition the new winning team adds a trinket to the golden keyboard, so their ShipIt Day victory carries on forever. If you are wondering what it takes to bring home the golden keyboard, look no further than ShipIt Day XIII&rsquo;s first place team, Dreamy Cloudy People.</p>

<h2>Learn from the Winners!</h2>

<p>Dreamy Cloudy People is a team of five individuals: Brett Heroux, Murtuza Syed, Niranjan Kumar, Abhijit Rao, and Swati Kode. The team spent the 24-hour hackathon on a real time push notification mechanism for patient chart web application views using the WebSocket API. Traditionally, data retrieval had been on demand, using AJAX and XMLHttpRequest. Previously, clinicians had to refresh their browser to receive updates to clinical data when reviewing a patient&rsquo;s chart.</p>

<p>With this project, the WebSocket API was leveraged to allow a server to push updates to clients as events were triggered. The web application then updated its views without needing a user to manually refresh the page. They stood up a Java service for web clients to create WebSocket connections and send/receive data. It was also used to broadcast events involving patient data, such as new lab results or orders. The client application uses an existing JavaScript framework, part of Cerner <em>Millennium</em> MPages, to create socket connections and update the state of the application in real time.</p>

<div align="center">
   <img class="center" src="http://engineering.cerner.com/assets/2018-11-16-shipit-xiii/shipit-xiii-2.jpg" width="600">
</div>


<p>During their presentation, Dreamy Cloudy People successfully pitched their improvement to the judges. After the presentation, one of our judges mentioned:</p>

<blockquote><p>Improving communication is always impactful in a clinical setting and improving to near real time is a great enhancement!</p></blockquote>

<p>There are several criteria that teams must showcase to prove their project is worthy of the Golden Keyboard:</p>

<ol>
<li>The project is well designed and captured everything that needed to be included.</li>
<li>The project is technically difficult and tested the team&rsquo;s technical knowledge, often leading to learning a new skill.</li>
<li>The presentation shares the value potential and impact that the improvement/creation has to Cerner, associates, or our stakeholders.</li>
</ol>


<p>Last but not least, a winning ShipIt Day team always makes sure to enjoy the event. One Dreamy Cloudy People team member, Niranjan Kumar, stated his favorite part of ShipIt Day was having &ldquo;the opportunity to focus on projects not directly related to my primary role&rdquo; and the &ldquo;collaboration with peers.&rdquo; Congrats to our first-place team!</p>

<h2>Additional ShipIt XIII Winners</h2>

<h3>2nd Place: No amount of Pepto can stop this ingestion!</h3>

<p><strong>Team members</strong>: Kevin Dunn, Scott Levander, Jeff Koehler, Dave Morgan, Rushabh Shah</p>

<div align="center">
   <img class="center" src="http://engineering.cerner.com/assets/2018-11-16-shipit-xiii/shipit-xiii-6.jpg" width="600">
</div>


<p>This team designed a MS SQL Server database to track files received from clients into <em><a href="https://www.cerner.com/solutions/population-health-management">HealtheIntent</a></em> and determine the latency since the last file arrived, as well as file size. They also created configuration tables to define expected file latency, acceptable thresholds before triggering an alert, and tables to track the people who want to receive an alert.  Feeding off of that data, the team also developed an email alerting service (in C#), <a href="https://www.tableau.com/">Tableau visualization</a> dashboards for internal project investigations, and a Web UI to manage configurations (using PHP/SQL Server).</p>

<h3>3rd Place: Overnight Shippers!</h3>

<p><strong>Team Members</strong>: Varun Kumar Chepuri, Tejaswi Gade, Ed Jalili, Neil Pathare</p>

<div align="center">
   <img class="center" src="http://engineering.cerner.com/assets/2018-11-16-shipit-xiii/shipit-xiii-5.jpg" width="600">
</div>


<p>Currently, there are issues that are being reported on <a href="https://www.splunk.com/">Splunk</a> and there is a lot of manual effort to log <a href="https://www.atlassian.com/software/jira">JIRAs</a> for them and then, developers need to track those issues while making any code changes. The JIRA backlog is building up and there is very little to no effort in cleaning up that backlog or working on fixing those issues. Issues logged in Splunk are not being fixed and these errors or defects are not caught early in the lifecycle. These errors or defects are shipped out to clients impacting their workflow. Therefore, Overnight Shippers! created a service bot which uses Splunk to find errors or exceptions and creates an issue in GitHub. This service bot creates a comment on a Pull Request if a Splunk issue exists for the files that are changed. Other capabilities include the capability to configure the bot per Github repository, log <a href="https://help.github.com/articles/about-issues/">GitHub issues</a> periodically, and support various project types.</p>

<h3>People Choice Awards</h3>

<div align="center">
  <table>
    <tr>
      <td align="center">
        <img class="center" src="http://engineering.cerner.com/assets/2018-11-16-shipit-xiii/shipit-xiii-4.jpg" width="300">
        <sub>Best Project: Centurions</sub>
      </td>
      <td align="center">
        <img class="center" src="http://engineering.cerner.com/assets/2018-11-16-shipit-xiii/shipit-xiii-3.jpg" width="300">
        <sub>Best Presentation: Team Rhinos</sub>
      </td>
      <td align="center">
        <img class="center" src="http://engineering.cerner.com/assets/2018-11-16-shipit-xiii/shipit-xiii-5.jpg" width="300">
        <sub>Best Team Name: Overnight Shippers!</sub>
      </td>
    </tr>
  </table>
</div>


<p></p>

<p>Time to start preparing for ShipIt Day 2019! Thank you to our talented judges Chuck Schneider, Justin Morrison, and Jim Dwyer for serving as our judges.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Our DevCulture Team: Connecting Communities & Empowering Teams to Invent the Future]]></title>
    <link href="http://engineering.cerner.com/blog/devculture-team/"/>
    <updated>2018-11-07T00:00:00-06:00</updated>
    <id>http://engineering.cerner.com/blog/devculture-team</id>
    <content type="html"><![CDATA[<p>The tech industry is constantly evolving; for better or worse, there&rsquo;s no way around it. Now, more than ever, having a culture that fosters collaboration, empowers associates, and supports innovation is vital to a company&rsquo;s success in the face of such constant change. However, an effective culture must be grown organically while being supported by senior leadership. At Cerner, we recognize the challenges involved in growing an effective, rewarding, and fun culture.With this in mind, we&rsquo;ve made intentional strategic investments to overcome them. We’ve taken a unique approach by establishing a team that focuses on growing our culture across dev and ops specifically. Our team is called the DevCulture Team.</p>

<div align="center">
    <img class="center" src="http://engineering.cerner.com/assets/2018-11-07-devculture-team/culture-1.jpg" width="450">
</div>


<h4>Our Mission</h4>

<blockquote><p>We exist as a strategic lever to establish Cerner as a destination for top tech talent, helping shift workforce behavior to catalyze the change Cerner needs for the Next.</p></blockquote>

<p>Cerner associates consider themselves privileged to work on challenging problems in an important space, healthcare. In 2010-2011, associates across dev and ops began to realize how much more they could learn from and contribute to the broader tech industry. We started attending conferences and bringing back new insights on the opportunities available when companies focused on culture as a driver for hiring, retaining, and leveling up associates working on software.</p>

<p>This led to establishing <a href="https://engineering.cerner.com/2013/08/devcon">DevCon</a> (our internal Developers Conference) in 2011, sponsoring local tech meetups as well as large scale tech conferences, sharing our work through this Engineering Health blog platform, and establishing the DevCulture Team officially in 2012. Prior to 2012, all efforts were completed by our first team member as extra projects while gaining the justification for a full time position on this new team. Not long after, we shifted our focus from awareness to associate industry engagement, encouraging associates to speak at conferences and to contribute to open source. As the work continued to increase, the DevCulture Team and our Culture Councils (described in more detail below) have grown around the globe as we work to align our values and advance together.</p>

<div align="center">
    <img class="center" src="http://engineering.cerner.com/assets/2018-11-07-devculture-team/culture-2.jpg" width="450">
    <sub>Currently, we focus on 10,495  associates across Cerner globally which represents a third of the company.</sub>
</div>


<br />


<p>So who do we target and how do we develop our strategies? We focus our programs and work on both sides of the Dev/Ops equation, including user experience and product strategy. We also uniquely report through development executives which gives us the ability to advocate for their perspectives, represent engineering, and align strategies as we partner with other organizations (such as Recruiting, Talent Development, Learning, Finance, etc.) to implement our programs and values.</p>

<p><strong>Culture Councils</strong></p>

<p>In effort to have buy-in, perspectives, and engagement from all sides of the business, we established Culture Councils to help us define our strategic direction. Each year, members are selected from an open application process. These Councils around the globe meet regularly to discuss where we are, where we are going, and where we need to be in order to be successful culturally. From existing programs to identifying cultural gaps, the Councils’ support of our team makes all of our work possible.</p>

<p>Curious about what type of programs we run? We thought you might be. Check out some of our favorites!</p>

<p><strong>DevCon</strong></p>

<p>Embodying our values, DevCon is the foundation of our development culture. Providing opportunities to learn, share, network, and grow, DevCon is an internal conference and now takes place in three locations each year: Kansas City, Philadelphia, and Bangalore.</p>

<p>From industry leader keynote speakers to hours of associate led sessions and a geek trivia night, associates look forward to DevCon all year round. Watch <a href="https://www.youtube.com/watch?v=8FR0tO1-1rk">DevCon highlight videos</a>, <a href="https://www.youtube.com/watch?v=QFfmTLmn3Ow&amp;list=PLSti19ysyJtBJqtXDxtlSFdA1herhJecj">keynote sessions</a>, and some <a href="https://www.youtube.com/watch?v=aZZCZpc0AcY">associate sessions</a> on YouTube to get a feel for what this awesome conference entails.</p>

<div align="center">
    <img class="center" src="http://engineering.cerner.com/assets/2018-11-07-devculture-team/culture-3.jpg" width="450">
    <div style="width: 600px;">
        <sub>Each year, the DevCulture team partners with associates from various organizations and roles to form the Core Planning Team that guides the overall direction of the conference, decides the theme, selects the talks, and plans engaging activities for associates to participate in at the conference.</sub>
    </div>
</div>


<br />


<p><strong>Engaging with the Industry</strong></p>

<p>We believe we have a lot to learn from and share back with the industry and local tech community. From agile methodologies to big data processing, we bring in industry experts on a monthly basis in our Tech Talk Series to share their knowledge and perspectives that help our associates learn and grow. You can subscribe to our <a href="https://www.youtube.com/user/CernerEng?sub_confirmation=1">YouTube Channel</a> to get notified anytime we post one!</p>

<p>While attending and sponsoring conferences helps us bring essential knowledge back to Cerner, we’re privileged to send associates out to speak at conferences each year around the world. Being accepted to these conferences recognizes our associates for their complex work and talent while sharing more about what we’re working on at Cerner. Follow us on <a href="https://twitter.com/CernerEng">Twitter</a> to find out what conferences we’re attending, sponsoring, or speaking at and come say hello! As a fun example of one of our talks, check out Kevin Shekleton’s talk at Strange Loop 2017 on ‘<a href="https://www.youtube.com/watch?v=s0XmiXs8iRw">The Security of Classic Game Consoles</a>’.</p>

<div align="center">
    <img class="center" src="http://engineering.cerner.com/assets/2018-11-07-devculture-team/culture-4.jpg" width="450">
    <sub>Engineering Director Jenni Syed and Engineering Vice President Kevin Shekleton present at FHIR DevDays 2018.</sub>
</div>


<br />


<p>When we consume open source in our software, we have the opportunity to leverage the talent from a broad cross section of the industry to make our solutions better. We also encourage associates to contribute to open source software both internally and externally. Learn more about the work we’re doing in Open Source on our <a href="http://bit.ly/2Oj5DeL">Blog</a>.</p>

<p><strong>ShipIt Day</strong></p>

<p>Modeled after <a href="https://www.atlassian.com/company/shipit">Atlassian’s ShipIt Day</a>, we frequently host these 24 hour hackathons throughout the year in Kansas City, Malvern, Bangalore, and Brasov. We believe this encourages ingenuity and collaboration by promoting cross-pollination of ideas and teams as they solve problems together. Teams in KC compete for the coveted Golden Keyboard and Golden Mouse trophies that travel the campus, each winning team adding a trinket to the trophy representing their unique winning project. Learn about our most recent ShipIt Day winners on this <a href="http://bit.ly/2PQXprk">Engineering Health blog</a>.</p>

<div align="center">
    <img class="center" src="http://engineering.cerner.com/assets/2018-11-07-devculture-team/culture-5.jpg" width="450">
    <sub>Teams present their projects to a panel of judges at the conclusion of the hackathon to determine the winners.</sub>
</div>


<br />


<p><strong>Our Work Can Sometimes Be Quite Odd.</strong></p>

<p>Amidst the strategic work in advancing our culture, we have found ourselves completing work for things most people would never consider to be a small part of their full time adult day job. Some of our favorite odd job memories from the past six years include:</p>

<ul>
<li>Ordering over 34,000 Lego bricks for <a href="https://www.youtube.com/watch?v=E-TcZBTCZdo">DevCon 2014</a> (following multiple strategy meetings and spreadsheets to determine how many would be necessary for our 3,000+ attendees)</li>
<li>Researching backstories on Marvel characters for DevCon 2017</li>
<li>Watching Doctor Who, Star Trek, Star Wars, Harry Potter, Lord of the Rings, etc. as part of our Training Requirements. We’re also required to pass a test covering Marvel vs. DC Characters. This is all to help ensure our team understand various cultural reference points that are popular amongst our target audience.</li>
<li>Building an elaborate patchwork of Lego shapes on a giant Lego board to serve as a background for an all company meeting
Renting a uHaul to transport old couches, coffee tables, TV stands, and TV’s we purchased from thrift stores in order to create retro living room spaces at <a href="https://www.youtube.com/watch?v=cE0YoFg-hkE">DevCon 2013</a> where associates played video games between sessions.</li>
</ul>


<div align="center">
    <img class="center" src="http://engineering.cerner.com/assets/2018-11-07-devculture-team/culture-6.jpg" width="450">
    <div style="width: 600px;">
        <sub>Prior to moving into our brand new Kansas City <a href="http://bit.ly/2GP1vuU">Innovations Campus</a> in 2017, our team made a video to demonstrate all the ways the desks can be configured to showcase the new setup. To avoid it being boring, we dressed up with various costumes we had on hand from other programs.</sub>
    </div>
</div>


<br />


<p>We believe culture is a journey, not a destination, and something we will always have to invest in and improve upon. These programs and efforts mentioned just scratch the surface of what we’re working on, with other projects ranging from how we can increase manager effectiveness to influencing our growth in continuous delivery models. Culture doesn&rsquo;t change overnight, we&rsquo;re iterating over ours with new programs based on regular feedback, that must be supported from within, and/or that we feel it&rsquo;s important enough to truly invest in it.</p>

<p>Interested in starting your own culture team? Great idea! We started out with smaller programs and projects to prove their effect and as they grew, documented the amount of work and any measurements we could to provide justification to have our first full time team member in 2012. Measuring cultural advancement can be challenging. We have done this by pulling engagement rates across different roles and organizations to gauge what is or isn’t effective, surveys following program events, and collecting anecdotal evidence of effect of programs (i.e. our team implemented these new SRE approaches/strategies because of Dave Rensin&rsquo;s keynote at DevCon last month).</p>

<p>Join us on <a href="https://twitter.com/CernerEng">Twitter</a> to stay up to date with all our cultural programs.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Infusing a Culture of Cybersecurity Within Cerner Engineering]]></title>
    <link href="http://engineering.cerner.com/blog/culture-of-cybersecurity/"/>
    <updated>2018-10-29T00:00:00-05:00</updated>
    <id>http://engineering.cerner.com/blog/culture-of-cybersecurity</id>
    <content type="html"><![CDATA[<p>With October being <a href="https://www.dhs.gov/national-cyber-security-awareness-month">Cybersecurity Awareness month</a>, we thought it would be a good time to reflect on some of the things we do in engineering to educate our associates and infuse security into our culture. We have over 28,000 associates worldwide supporting hundreds of solutions with millions of lines of code. Each associate has a specialization, such as software development, system support, and consulting. Keeping everyone up to date on the latest in security is a difficult task.</p>

<p>So how do we do it? We have teams dedicated to security that work directly within engineering. These teams have various responsibilities such as ownership of scanning tools and vulnerability tracking. My team&rsquo;s goal is to bridge the gap by injecting security as a first-class citizen in the software development lifecycle. When working with developers, you have to make the right thing to do the easy thing to do. This is no different when it comes to security. In order to make security easy, we scan, assess, and create a plan for our developers to remediate their vulnerabilities. We promote the tools for scanning, help teams understand the results, and identify fixes for vulnerabilities. We run a monthly cybersecurity meetup which we use as a venue for associates to speak and learn about varying security topics.</p>

<div align="center">
  <table>
    <tr>
      <td align="center">
        <img class="center" src="http://engineering.cerner.com/assets/2018-10-29-culture-of-cybersecurity/cybersecurity-1.jpg" width="450">
      </td>
      <td align="center">
        <img class="center" src="http://engineering.cerner.com/assets/2018-10-29-culture-of-cybersecurity/cybersecurity-2.jpg" width="450">
      </td>
    </tr>
  </table>
  <sub>Andy Nelson opening the September edition of the Cybersecurity meetup and Sebastian Brown presenting at the July edition.</sub>
</div>


<p>We also take advantage of opportunities like Cybersecurity Awareness month. We bridge organizational gaps to host a variety of security focused events, engaging associates in development, security, and operations to facilitate better relationships and collaboration. Events like these lower the barrier to entry for our developers to learn more secure practices, and embrace and celebrate the progress we are making in our security journey. We kicked off the activities this month with an external tech talk from <a href="https://twitter.com/bhommertzheim">Britney Hommertzheim</a>. Britney, the Director of Information Security at <a href="https://www.amctheatres.com">AMC Theatres</a>, presented on how we can better integrate security teams and developers. It was a great talk and you can watch the talk on our <a href="https://youtu.be/DTYiNidFjzM">YouTube</a> channel. We invited another external speaker for our Cybersecurity meetup a few weeks ago too. Caleb Christopher, a Technical Business Adviser at <a href="https://www.allegianttechnology.com">Allegiant Technology</a>, gave a great talk titled &ldquo;Defeating Email Fraud with DMARC&rdquo;. Along side those 2 events, we have held lunch and learns throughout the month, and are wrapping it all up with an hour of security focused lightning talks tomorrow.</p>

<div align="center">
  <table>
    <tr>
      <td align="center">
        <img class="center" src="http://engineering.cerner.com/assets/2018-10-29-culture-of-cybersecurity/cybersecurity-3.jpg" width="450">
      </td>
      <td align="center">
        <img class="center" src="http://engineering.cerner.com/assets/2018-10-29-culture-of-cybersecurity/cybersecurity-4.jpg" width="450">
      </td>
    </tr>
  </table>
  <sub>Britney Hommertzheim giving an external tech talk about integrating security across organizations</sub>
</div>


<p>Security is not easy and we always have to strive to get better. Our development, operations, and security teams must work together, so we are doing our best to provide a forum for collaboration and sharing.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Girl Scouts Earn Cybersecurity Badge at Cerner]]></title>
    <link href="http://engineering.cerner.com/blog/girl-scouts-cybersecurity/"/>
    <updated>2018-10-05T00:00:00-05:00</updated>
    <id>http://engineering.cerner.com/blog/girl-scouts-cybersecurity</id>
    <content type="html"><![CDATA[<p>As a software engineering executive from Colombia, I thought that the best way to honor <a href="https://www.hispanicheritagemonth.gov">Hispanic Heritage Month</a> (September 15-October 15) was to help the local Girl Scout Hispanic troops earn one of the new cybersecurity badges. October is Cybersecurity Awareness Month, having the activities nearing October seemed very fitting.</p>

<p><a href="https://www.girlscouts.org/en/about-girl-scouts/girl-scouts-and-stem.html">Girl Scouts has been focusing on STEM badges</a> for all ages with several new initiatives in the past couple of years. The cybersecurity badges are some of the latest additions to the growing list of STEM badges that girls can earn. I was excited to help the troops earn their badge and I wanted to make it very special and appealing to these girls, so I decided to run the event entirely in Spanish. I thought that this approach would be a great way not only to engage the girls, but also their family members who often accompany them to the events.</p>

<p>The badge was designed to be very interactive and engaging. The first activity was a game that helped the girls think about all the different kinds of electronic devices that exist, such as Fitbits, iPads, cell phones, TVs, etc, and how they interact with them in their daily life. The activity then focused on how security in everyday life can translate to security in cyberspace.</p>

<p><img class="center" src="http://engineering.cerner.com/assets/2018-10-05-girl-scouts-cybersecurity/girl-scouts-1.jpg" width="600"></p>

<p>The next part of the event focused on helping the girls understand how much of our life is connected to the internet and how different our life would be if it wasn’t so. The girls had fun describing how they would live without internet. They all agreed that life without internet would be challenging but they would still be able to read and go camping!</p>

<p>To help illustrate the concept of how layers of security are important, the girls drew on whiteboards how they could defend a castle. The girls were quite inventive on this interactive activity!</p>

<div align="center">
  <table>
    <tr>
      <td align="center">
        <img class="center" src="http://engineering.cerner.com/assets/2018-10-05-girl-scouts-cybersecurity/girl-scouts-2.jpg" width="650">
      </td>
      <td align="center">
        <img class="center" src="http://engineering.cerner.com/assets/2018-10-05-girl-scouts-cybersecurity/girl-scouts-3.jpg" width="250">
      </td>
    </tr>
  </table>
  <sub>The girls secured their “castles” effectively. One of the most technologically advanced castles included dragons, a force-field and a keypad for the password.</sub>
</div>


<p>The subsequent area of emphasis was regarding how electronic devices communicate. It was interesting to break down networking concepts like TCP/IP, network topology, and firewalls to a group of 1<sup>st</sup> and 2<sup>nd</sup> graders, but I made these concepts relatable. IP packets were explained by building key chains using beads that spelled “brownies.” The activity involved the girls acting as senders, messengers and receivers, along with individual beads acting as packets with headers, contents, and other metadata.</p>

<div align="center">
  <img class="center" src="http://engineering.cerner.com/assets/2018-10-05-girl-scouts-cybersecurity/girl-scouts-4.jpg" width="600">
  <sub>One scout displays her finished IP packet keychain!</sub>
</div>


<p>Safety rules were an integral part of the badge; the Brownies formed groups and made posters to help others understand the importance of the following internet rules:</p>

<ul>
<li>Don’t talk to strangers</li>
<li>Stop and think before you act</li>
<li>Don’t believe everything that you see or everything that people say</li>
</ul>


<p>We wrapped up by touring <a href="https://engineering.cerner.com/blog/one-year-calling-innovations-home">our Innovations campus</a> and highlighting how technology helps us improve our health and the health of our communities. Overall, this was another phenomenal opportunity for the Girl Scouts to engage with Cerner. It exposed them to  key technology concepts and it expanded the prevalence of STEM education throughout the community.</p>

<p><em>To see more about Denisse’s involvement in the Hispanic Girl Scout community, <a href="https://engineering.cerner.com/blog/influencing-the-young-spanish-seaking-female-generation">check out this blog from 2017</a>. Denisse has played a vital role in bringing STEM opportunities to the local troops. In fact, she was recently recognized by the Hispanic Chamber of Commerce of Greater Kansas City for her philanthropic efforts by receiving the STEM and Education Nuestra Latina 2018 Award. Congratulations, Denisse!</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SSH Steps for Jenkins Pipeline]]></title>
    <link href="http://engineering.cerner.com/blog/ssh-steps-for-jenkins-pipeline/"/>
    <updated>2018-09-20T00:00:00-05:00</updated>
    <id>http://engineering.cerner.com/blog/ssh-steps-for-jenkins-pipeline</id>
    <content type="html"><![CDATA[<p><strong>Pipeline-as-code</strong> or defining the deployment pipeline through code rather than manual job creation through UI, provides tremendous benefits for teams automating builds and deployment infrastructure across their environments.</p>

<p><img class="center" src="http://engineering.cerner.com/assets/2018-09-20-ssh-steps-for-jenkins-pipeline/jenkins-pipeline.png" width="800"></p>

<p><em>Source of image: <a href="https://jenkins.io/doc/book/pipeline/">https://jenkins.io/doc/book/pipeline/</a></em></p>

<h1>Jenkins Pipelines</h1>

<p><a href="https://jenkins.io/">Jenkins</a> is a well-known open source continuous integration and continuous deployment automation tool. With the latest 2.0 release, Jenkins introduced the Workflow plugin that implements Pipeline-as-code. This plugin lets you define delivery pipelines using concise scripts which deal elegantly with jobs involving persistence and asynchrony.</p>

<p>The Pipeline-as-code&rsquo;s script is also known as a <em>Jenkinsfile</em>.</p>

<p>Jenkinsfiles uses a domain specific language syntax based on the <a href="http://groovy-lang.org/">Groovy</a> programming language. They are persistent files which can be checked in and version-controlled along with the rest of their project source code. This file can contain the complete set of encoded steps (steps, nodes, and stages) necessary to define the entire application life-cycle, becoming the intersecting point between development and operations.</p>

<h2>Missing piece of the puzzle</h2>

<p>One of the most common steps defined in a basic pipeline workflow is the <em>Deploy</em> step. The deployment stage encompasses everything from publishing build artifacts to pushing code into pre-production and production environments. This deployment stage usually involves both development and operations teams logging onto various remote nodes to run commands and/or scripts to deploy code and configuration. While there are a couple of existing ssh plugins for Jenkins, they currently don&rsquo;t support the functionality such as logging into nodes for pipelines. Thus, there was a need for a plugin that supports these steps.</p>

<h1>Introducing SSH Steps</h1>

<p><img class="center" src="http://engineering.cerner.com/assets/2018-09-20-ssh-steps-for-jenkins-pipeline/jenkins-ssh-steps-plugin.png"></p>

<p>Recently, our team consisting of <a href="https://github.com/ghenkes">Gabe Henkes</a>, <a href="https://github.com/wuchenwang">Wuchen Wang</a> and <a href="https://github.com/nrayapati">myself</a> started working on a project to automate deployments through Jenkins pipelines to help facilitate running commands on over one thousand nodes. We looked at several options including existing plugins, internal shared Jenkins libraries, and others. In the end, we felt it was best to create and open source a plugin to fill this gap so that it can be used across Cerner and beyond.</p>

<p>The initial version of this new plugin SSH Steps supports the following:</p>

<ul>
<li><code>sshCommand</code>: Executes the given command on a remote node.</li>
<li><code>sshScript</code>: Executes the given shell script on a remote node.</li>
<li><code>sshGet</code>: Gets a file/directory from the remote node to current workspace.</li>
<li><code>sshPut</code>: Puts a file/directory from the current workspace to remote node.</li>
<li><code>sshRemove</code>: Removes a file/directory from the remote node.</li>
</ul>


<h2>Usage</h2>

<p>Below is a simple demonstration on how to use above steps. More documentation can be found on <a href="https://github.com/jenkinsci/ssh-steps-plugin/blob/master/README.adoc">GitHub</a>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="kt">def</span> <span class="n">remote</span> <span class="o">=</span> <span class="o">[:]</span>
</span><span class='line'><span class="n">remote</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="s2">&quot;node&quot;</span>
</span><span class='line'><span class="n">remote</span><span class="o">.</span><span class="na">host</span> <span class="o">=</span> <span class="s2">&quot;node.abc.com&quot;</span>
</span><span class='line'><span class="n">remote</span><span class="o">.</span><span class="na">allowAnyHosts</span> <span class="o">=</span> <span class="kc">true</span>
</span><span class='line'>
</span><span class='line'><span class="n">node</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">withCredentials</span><span class="o">([</span><span class="n">usernamePassword</span><span class="o">(</span><span class="nl">credentialsId:</span> <span class="s1">&#39;sshUserAcct&#39;</span><span class="o">,</span> <span class="nl">passwordVariable:</span> <span class="s1">&#39;password&#39;</span><span class="o">,</span> <span class="nl">usernameVariable:</span> <span class="s1">&#39;userName&#39;</span><span class="o">)])</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">remote</span><span class="o">.</span><span class="na">user</span> <span class="o">=</span> <span class="n">userName</span>
</span><span class='line'>        <span class="n">remote</span><span class="o">.</span><span class="na">password</span> <span class="o">=</span> <span class="n">password</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">stage</span><span class="o">(</span><span class="s2">&quot;SSH Steps Rocks!&quot;</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">writeFile</span> <span class="nl">file:</span> <span class="s1">&#39;test.sh&#39;</span><span class="o">,</span> <span class="nl">text:</span> <span class="s1">&#39;ls&#39;</span>
</span><span class='line'>            <span class="n">sshCommand</span> <span class="nl">remote:</span> <span class="n">remote</span><span class="o">,</span> <span class="nl">command:</span> <span class="s1">&#39;for i in {1..5}; do echo -n \&quot;Loop \$i \&quot;; date ; sleep 1; done&#39;</span>
</span><span class='line'>            <span class="n">sshScript</span> <span class="nl">remote:</span> <span class="n">remote</span><span class="o">,</span> <span class="nl">script:</span> <span class="s1">&#39;test.sh&#39;</span>
</span><span class='line'>            <span class="n">sshPut</span> <span class="nl">remote:</span> <span class="n">remote</span><span class="o">,</span> <span class="nl">from:</span> <span class="s1">&#39;test.sh&#39;</span><span class="o">,</span> <span class="nl">into:</span> <span class="s1">&#39;.&#39;</span>
</span><span class='line'>            <span class="n">sshGet</span> <span class="nl">remote:</span> <span class="n">remote</span><span class="o">,</span> <span class="nl">from:</span> <span class="s1">&#39;test.sh&#39;</span><span class="o">,</span> <span class="nl">into:</span> <span class="s1">&#39;test_new.sh&#39;</span><span class="o">,</span> <span class="nl">override:</span> <span class="kc">true</span>
</span><span class='line'>            <span class="n">sshRemove</span> <span class="nl">remote:</span> <span class="n">remote</span><span class="o">,</span> <span class="nl">path:</span> <span class="s1">&#39;test.sh&#39;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Configuring via YAML</h2>

<p>At Cerner, we always strive to have simple configuration files for CI/CD pipelines whenever possible. With that in mind, my team built a wrapper on top of these steps from this plugin. After some design and analysis, we came up with the following YAML structure to run commands across various remote groups:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">config</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">credentials_id</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">sshUserAcct</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">remote_groups</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">r_group_1</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">node01</span>
</span><span class='line'>      <span class="l-Scalar-Plain">host</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">node01.abc.net</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">node02</span>
</span><span class='line'>      <span class="l-Scalar-Plain">host</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">node02.abc.net</span>
</span><span class='line'>  <span class="l-Scalar-Plain">r_group_2</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">node03</span>
</span><span class='line'>      <span class="l-Scalar-Plain">host</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">node03.abc.net</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">command_groups</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">c_group_1</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">commands</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="s">&#39;ls</span><span class="nv"> </span><span class="s">-lrt&#39;</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="s">&#39;whoami&#39;</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">scripts</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="s">&#39;test.sh&#39;</span>
</span><span class='line'>  <span class="l-Scalar-Plain">c_group_2</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">gets</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">from</span><span class="p-Indicator">:</span> <span class="s">&#39;test.sh&#39;</span>
</span><span class='line'>          <span class="l-Scalar-Plain">to</span><span class="p-Indicator">:</span> <span class="s">&#39;test_new.sh&#39;</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">puts</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">from</span><span class="p-Indicator">:</span> <span class="s">&#39;test.sh&#39;</span>
</span><span class='line'>          <span class="l-Scalar-Plain">to</span><span class="p-Indicator">:</span> <span class="s">&#39;.&#39;</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">removes</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="s">&#39;test.sh&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">steps</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">deploy</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">remote_groups</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">r_group_1</span>
</span><span class='line'>      <span class="l-Scalar-Plain">command_groups</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">c_group_1</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">remote_groups</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">r_group_2</span>
</span><span class='line'>      <span class="l-Scalar-Plain">command_groups</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">c_group_2</span>
</span></code></pre></td></tr></table></div></figure>


<p>The above example runs commands from <code>c_group_1</code> on remote nodes within <code>r_group_1</code> in parallel before it moves on to the next group using <code>sshUserAcct</code> (from the <a href="https://jenkins.io/doc/book/using/using-credentials/">Jenkins Credentials</a> store) to logon to nodes.</p>

<h2>Shared Pipeline Library</h2>

<p>We have created a shared pipeline library that contains a <code>sshDeploy</code> step to support the above mentioned YAML syntax. Below is the code snippet for the sshDeploy step from the library. The full version can be found <a href="https://github.com/nrayapati/ssh-deploy-library">here</a> on Github.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="err">#</span><span class="o">!</span><span class="s">/usr/</span><span class="n">bin</span><span class="o">/</span><span class="n">groovy</span>
</span><span class='line'><span class="kt">def</span> <span class="nf">call</span><span class="o">(</span><span class="n">String</span> <span class="n">yamlName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="kt">def</span> <span class="n">yaml</span> <span class="o">=</span> <span class="n">readYaml</span> <span class="nl">file:</span> <span class="n">yamlName</span>
</span><span class='line'>    <span class="n">withCredentials</span><span class="o">([</span><span class="n">usernamePassword</span><span class="o">(</span><span class="nl">credentialsId:</span> <span class="n">yaml</span><span class="o">.</span><span class="na">config</span><span class="o">.</span><span class="na">credentials_id</span><span class="o">,</span> <span class="nl">passwordVariable:</span> <span class="s1">&#39;password&#39;</span><span class="o">,</span> <span class="nl">usernameVariable:</span> <span class="s1">&#39;userName&#39;</span><span class="o">)])</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">yaml</span><span class="o">.</span><span class="na">steps</span><span class="o">.</span><span class="na">each</span> <span class="o">{</span> <span class="n">stageName</span><span class="o">,</span> <span class="n">step</span> <span class="o">-&gt;</span>
</span><span class='line'>            <span class="n">step</span><span class="o">.</span><span class="na">each</span> <span class="o">{</span>
</span><span class='line'>                <span class="kt">def</span> <span class="n">remoteGroups</span> <span class="o">=</span> <span class="o">[:]</span>
</span><span class='line'>                <span class="kt">def</span> <span class="n">allRemotes</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>                <span class="n">it</span><span class="o">.</span><span class="na">remote_groups</span><span class="o">.</span><span class="na">each</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">remoteGroups</span><span class="o">[</span><span class="n">it</span><span class="o">]</span> <span class="o">=</span> <span class="n">yaml</span><span class="o">.</span><span class="na">remotes</span><span class="o">.</span><span class="s2">&quot;$it&quot;</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>                <span class="kt">def</span> <span class="n">commandGroups</span> <span class="o">=</span> <span class="o">[:]</span>
</span><span class='line'>                <span class="n">it</span><span class="o">.</span><span class="na">command_groups</span><span class="o">.</span><span class="na">each</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">commandGroups</span><span class="o">[</span><span class="n">it</span><span class="o">]</span> <span class="o">=</span> <span class="n">yaml</span><span class="o">.</span><span class="na">commands</span><span class="o">.</span><span class="s2">&quot;$it&quot;</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>                <span class="kt">def</span> <span class="n">isSudo</span> <span class="o">=</span> <span class="kc">false</span>
</span><span class='line'>                <span class="n">remoteGroups</span><span class="o">.</span><span class="na">each</span> <span class="o">{</span> <span class="n">remoteGroupName</span><span class="o">,</span> <span class="n">remotes</span> <span class="o">-&gt;</span>
</span><span class='line'>                    <span class="n">allRemotes</span> <span class="o">+=</span> <span class="n">remotes</span><span class="o">.</span><span class="na">collect</span> <span class="o">{</span> <span class="n">remote</span> <span class="o">-&gt;</span>
</span><span class='line'>                        <span class="k">if</span><span class="o">(!</span><span class="n">remote</span><span class="o">.</span><span class="na">name</span><span class="o">)</span>
</span><span class='line'>                            <span class="n">remote</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">remote</span><span class="o">.</span><span class="na">host</span>
</span><span class='line'>                        <span class="n">remote</span><span class="o">.</span><span class="na">user</span> <span class="o">=</span> <span class="n">userName</span>
</span><span class='line'>                        <span class="n">remote</span><span class="o">.</span><span class="na">password</span> <span class="o">=</span> <span class="n">password</span>
</span><span class='line'>                        <span class="n">remote</span><span class="o">.</span><span class="na">allowAnyHosts</span> <span class="o">=</span> <span class="kc">true</span>
</span><span class='line'>                        <span class="n">remote</span><span class="o">.</span><span class="na">groupName</span> <span class="o">=</span> <span class="n">remoteGroupName</span>
</span><span class='line'>                        <span class="n">remote</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>                <span class="k">if</span><span class="o">(</span><span class="n">allRemotes</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="k">if</span><span class="o">(</span><span class="n">allRemotes</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                        <span class="kt">def</span> <span class="n">stepsForParallel</span> <span class="o">=</span> <span class="n">allRemotes</span><span class="o">.</span><span class="na">collectEntries</span> <span class="o">{</span> <span class="n">remote</span> <span class="o">-&gt;</span>
</span><span class='line'>                            <span class="o">[</span><span class="s2">&quot;${remote.groupName}-${remote.name}&quot;</span> <span class="o">:</span> <span class="n">transformIntoStep</span><span class="o">(</span><span class="n">stageName</span><span class="o">,</span> <span class="n">remote</span><span class="o">.</span><span class="na">groupName</span><span class="o">,</span> <span class="n">remote</span><span class="o">,</span> <span class="n">commandGroups</span><span class="o">)]</span>
</span><span class='line'>                        <span class="o">}</span>
</span><span class='line'>                        <span class="n">stage</span><span class="o">(</span><span class="n">stageName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                            <span class="n">parallel</span> <span class="n">stepsForParallel</span>
</span><span class='line'>                        <span class="o">}</span>
</span><span class='line'>                    <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                        <span class="kt">def</span> <span class="n">remote</span> <span class="o">=</span> <span class="n">allRemotes</span><span class="o">.</span><span class="na">first</span><span class="o">()</span>
</span><span class='line'>                        <span class="n">stage</span><span class="o">(</span><span class="n">stageName</span> <span class="o">+</span> <span class="s2">&quot;\n&quot;</span> <span class="o">+</span> <span class="n">remote</span><span class="o">.</span><span class="na">groupName</span> <span class="o">+</span> <span class="s2">&quot;-&quot;</span> <span class="o">+</span> <span class="n">remote</span><span class="o">.</span><span class="na">name</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                            <span class="n">transformIntoStep</span><span class="o">(</span><span class="n">stageName</span><span class="o">,</span> <span class="n">remote</span><span class="o">.</span><span class="na">groupName</span><span class="o">,</span> <span class="n">remote</span><span class="o">,</span> <span class="n">commandGroups</span><span class="o">).</span><span class="na">call</span><span class="o">()</span>
</span><span class='line'>                        <span class="o">}</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>By using the step (as described in the snippet above) from this shared pipeline library, a Jenkinsfile can be reduced to:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="nd">@Library</span><span class="o">(</span><span class="s1">&#39;ssh_deploy&#39;</span><span class="o">)</span> <span class="n">_</span>
</span><span class='line'>
</span><span class='line'><span class="n">node</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">checkout</span> <span class="n">scm</span>
</span><span class='line'>  <span class="nf">sshDeploy</span><span class="o">(</span><span class="s1">&#39;dev/deploy.yml&#39;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>An example execution of the above pipeline code in Blue Ocean looks like this:</p>

<p><img class="center" src="http://engineering.cerner.com/assets/2018-09-20-ssh-steps-for-jenkins-pipeline/jenkins-ssh-deploy.png" width="600"></p>

<h2>Wrapping up</h2>

<p>Steps from the <a href="https://github.com/jenkinsci/ssh-steps-plugin">SSH Steps Plugin</a> are deliberately generic enough that they can be used for various other use-cases as well, not just for deploying code. Using SSH Steps has significantly reduced the time we spend on deployments and has given us the possibility of easily scaling our deployment workflows to various environments.</p>

<p>Help us make this <a href="https://github.com/jenkinsci/ssh-steps-plugin">plugin</a> better by contributing. Whether it is adding or suggesting a new feature, bug fixes, or simply improving documentation, contributions are always welcome.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ShipIt XII]]></title>
    <link href="http://engineering.cerner.com/blog/shipit-xii/"/>
    <updated>2018-08-30T00:00:00-05:00</updated>
    <id>http://engineering.cerner.com/blog/shipit-xii</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://engineering.cerner.com/assets/2018-08-30-shipit-xii/shipitxii-logo.png" width="400"></p>

<p>This month we held our quarterly hackathon event- called ShipIt Day. We would like to thank all the participants for making ShipIt Day XII a huge success. With 75 participants, we had associates representing 13 different organizations across Cerner. These associates were given 24-hours to meet the requirements of this hackathon which included making something that was innovative, usable, and value-adding. As the clock ticked down, our associates worked in their teams to complete a project while taking some time to enjoy the fun activities happening throughout ShipIt day.</p>

<p><img class="center" src="http://engineering.cerner.com/assets/2018-08-30-shipit-xii/shipitxii-1.jpg" width="640"></p>

<p>It is an unwritten rule that the balance between fun and project time during ShipIt days should remain even. Associates are encouraged to enjoy the collaborative spaces of Cerner&rsquo;s Innovations campus and participate in various activities such as ping-pong, eating snacks, playing games, and building relationships with other Cerner associates. Participants were given vouchers to use in the Innovations Café for breakfast and lunch. They were also served a fully-catered taco bar to stay energized for dinner.</p>

<p>This year, <a href="https://www.imdb.com/title/tt0086567/">WarGames</a> and <a href="https://en.wikipedia.org/wiki/ColecoVision">ColecoVision</a> gameplay were brought in for participants to enjoy throughout the evening. As said best by Cerner associate, Carl Chesser (<a href="https://twitter.com/che55er">@che55er</a>):</p>

<blockquote><p>Software creation requires additional breaks… ShipIt at Cerner is no exception of this software craftmanship approach.</p></blockquote>

<p>The morning crept up on the teams quickly, and they had to begin preparing for their 4-minute presentation in the Assembly at Innovations campus. The goal of the team presentations is to explain the project, how it was implemented, and show a brief demo to the judges and audience. All the teams delivered competitive pitches, which made judging very difficult.</p>

<p><img class="center" src="http://engineering.cerner.com/assets/2018-08-30-shipit-xii/shipitxii-2.jpg" width="640"></p>

<p>Huge thanks to Micah Whitacre, Nick Smith, Jon Miller, and Jared Moore for serving as our rockstar judges!</p>

<h2>Overall Winners</h2>

<p>The judges gathered together after the completion of the presentations to decide the top three performing teams. Congratulations to the following teams on your outstanding performance!</p>

<h3>First Place: Let&rsquo;s Take Suggestions</h3>

<p>Team Members: Scott Grissom, Alex Harder, and Matt Nelson</p>

<p><img class="center" src="http://engineering.cerner.com/assets/2018-08-30-shipit-xii/shipitxii-8.jpg" width="400"></p>

<p>This team was awarded the Golden Keyboard for their first-place achievement. They will defend the traveling trophy for the upcoming months and add a symbolic trinket to the collection for their team to be remembered in ShipIt history.</p>

<p>The focus of this project was to provide a mechanism for customized cloud-based ACL testing. Utilizing serverless functions through the <a href="https://www.openfaas.com/">OpenFaaS framework</a>, the team enabled rapid development and deployment of serverless functions which test a specific type of network access, e.g. using <a href="https://en.wikipedia.org/wiki/CURL">cURL</a> to access a ReST endpoint or a JDBC client to access a database instance. Deploying these functions to the same cloud instance which hosts services provides a more accurate testing of network dependencies from the perspective of a service as opposed to testing from a developer machine.</p>

<h3>Second Place: &#35;crowdercrowd</h3>

<p>Team Members: Ian Kottman, Heather Boveri, Robert Ryterski, and David Crowder</p>

<p><img class="center" src="http://engineering.cerner.com/assets/2018-08-30-shipit-xii/shipitxii-6.jpg" width="400"></p>

<p>&#35;crowdercrowd created a dashboard showing cluster utilization of applications across both on-premise and public cloud clusters. The metrics show how much CPU and memory an application is using versus how much it is requesting, along with an estimated yearly cost to run the application. This dashboard will be used to identify what applications can be scaled down to better fit their actual resource needs.</p>

<h3>Third Place: Bravo Avocado</h3>

<p>Team Members: Jan Monterrubio, Maximilian Schroeder, and Jacob Zimmermann</p>

<p><img class="center" src="http://engineering.cerner.com/assets/2018-08-30-shipit-xii/shipitxii-7.jpg" width="400"></p>

<p>Bravo Avocado created a <a href="https://maven.apache.org/index.html">Maven plugin</a> that starts a <a href="https://www.docker.com/">Docker container</a> of a ReST service. It also allows the integration tests to dynamically connect to the correct URL and port of the container. This lets users run integration tests directly against the working code as part of the Maven lifecycle. Before the team wrote the plugin, they had to manually stand up the service and update the test configuration to validate any changes. By tying these eight steps to an existing command, users can streamline development for ReST services.</p>

<h3>People&rsquo;s Choice</h3>

<p>Aside from our talented official judges, many associates join in on the ShipIt Day fun to act as peer judges in the People&rsquo;s Choice category. The large audience during the ShipIt presentations was asked to get involved and vote for their favorite teams in certain categories.</p>

<ul>
<li><p><strong>Favorite Team Name</strong>: Chef BoyarDeployments could be better (Steven Goldberg, Ryan Neff)</p></li>
<li><p><strong>Favorite Project</strong>: Audio Bot (Mitali Paygude, Kunal Suryavanshi, Vinay Datta Pinnaka)</p></li>
<li><p><strong>Best Presentation</strong>: Team Rhinos (Venkata Adusumilli, Veda Bhaskar Bhamidipati, Naga Prashanth Chanda, Sunand Kumar Matam, Prashanth Gajula)</p></li>
</ul>


<div align="center">
  <table>
    <tr>
      <td align="center">
        <img class="center" src="http://engineering.cerner.com/assets/2018-08-30-shipit-xii/shipitxii-4.jpg" width="300">
        <sub>Favorite Team Name</sub>
      </td>
      <td align="center">
        <img class="center" src="http://engineering.cerner.com/assets/2018-08-30-shipit-xii/shipitxii-5.jpg" width="300">
        <sub>Favorite Project</sub>
      </td>
      <td align="center">
        <img class="center" src="http://engineering.cerner.com/assets/2018-08-30-shipit-xii/shipitxii-3.jpg" width="300">
        <sub>Best Presentation</sub>
      </td>
    </tr>
  </table>
</div>


<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Summer of Engineering Health: A Software Intern's Story]]></title>
    <link href="http://engineering.cerner.com/blog/summer-of-engineering-health-intern-story/"/>
    <updated>2018-07-26T00:00:00-05:00</updated>
    <id>http://engineering.cerner.com/blog/summer-of-engineering-health-intern-story</id>
    <content type="html"><![CDATA[<p><em>Pratik will be starting his Junior year at the University of Michigan this Fall studying Computer Science and Biomedical Engineering. This summer he’s a Software Intern on Cerner’s LightsOn Network team. This is the story of his summer experience:</em></p>

<p>As a college student, it&rsquo;s not every day that you get to work on cutting edge technology to transform healthcare as we know it. Every morning, I walk past a wall on the way to the elevator: &ldquo;Health care is too important to stay the same.&rdquo; Simple enough, huh?</p>

<p>Healthcare has been one of the few fields that has yet to fully embrace the possibilities new technology has afforded. Throughout my internship, there&rsquo;s been an overall culture where associates understand they wouldn&rsquo;t be working on something unless it was important. As a result, associates are visibly passionate and driven about the problems they&rsquo;re working on, constantly striving to improve and add value. In my experience thus far, the environment at Cerner has been both engaging and supportive, allowing me to grow both personally and professionally as I strive to help improve healthcare and better the lives of others.</p>

<p><img class="center" src="http://engineering.cerner.com/assets/2018-07-26-summer-of-engineering-health-intern-story/summer-2018-intern-1.jpg"></p>

<p>As interns, we had the opportunity to attend our two-day developer conference (<a href="https://engineering.cerner.com/2013/08/devcon/">DevCon</a>) where we learned from <a href="https://www.youtube.com/user/CernerEng/featured">talks</a> on topics ranging from development technologies, innovating for maximum value, and understanding the perspectives of our clients when they use our solutions. I found it interesting to reflect on the differences between the &ldquo;best solution&rdquo; from a technology/development standpoint versus that of the end-user, maneuvering the product every day. More importantly, we discussed how we as engineers can provide users with opportunities to streamline their workflow and increase efficacy, without causing frustration among clients accustomed to a more traditional process. Changes need to be implemented gradually and seamlessly in order to get the most buy-in. Introduce change too fast and the users will be frustrated, regardless of the overall improvement.</p>

<h3>Small Data, Big Picture</h3>

<p>This summer, I have had the opportunity to work as a Software Intern on the <a href="https://www.cerner.com/solutions/lights-on-network">LightsOn Network</a> team, which develops a solution that provides both internal associates and external clients with the pertinent information necessary to make organizational decisions, whether that be in workforce experience, system configuration optimization, or organizational value. I&rsquo;ve been contributing to a project aimed at providing users with additional clarity about the status of their data at the metric, dashboard, and data source levels. The status indicators update in real-time to provide clients with the most up to date information about their data. Users can then examine the dashboards with this information in mind or drill down to identify what specific feed may be causing the issue to troubleshoot. The ability to immediately make such a large impact on clients around the world as an intern has been a humbling experience.</p>

<p><img class="center" src="http://engineering.cerner.com/assets/2018-07-26-summer-of-engineering-health-intern-story/summer-2018-intern-3.jpg"></p>

<p>The internship experience thus far has not only helped me learn about useful development languages including <a href="https://www.djangoproject.com/">Django</a>, <a href="https://angular.io/">Angular</a>, and <a href="https://jquery.com/">JQuery</a>, but also opened my eyes to the considerations taken into account when delivering a successful analytics product and software application in general. I&rsquo;ve experienced the importance of breaking down the product into individual problems to target and then working on telling a clear story in the final product. All around me, the decisions made are not based on technology alone, but first truly consider the value added to the individual providers we aim to serve. By reducing inefficiencies in healthcare, we allow providers to do their jobs more effectively and in turn, allow more people access to healthcare.</p>

<h3>Key Takeaways</h3>

<ul>
<li>Built great connections with our team members and fellow interns</li>
<li>Learned new programming languages, but more importantly, became more experienced with engineering practices in a highly regulated industry, as well as, the agile development framework</li>
<li>Improved time management skills, especially optimizing my time usage when managing code reviews and future development tasks</li>
<li>Learned first-hand the value of diving in deep and taking advantage of every opportunity possible</li>
<li>Became inspired to continue applying computer science to the field of healthcare and constantly look for avenues to strengthen our solutions to ultimately benefit each patient</li>
<li>Realized that improvements to healthcare technology doesn’t only affect a specific group of people, but each and every one of us &ndash; the impact is enormous.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scalable Data Science With FHIR]]></title>
    <link href="http://engineering.cerner.com/blog/data-engineering-with-bunsen/"/>
    <updated>2018-07-02T00:00:00-05:00</updated>
    <id>http://engineering.cerner.com/blog/data-engineering-with-bunsen</id>
    <content type="html"><![CDATA[<p>The <a href="https://www.hl7.org/fhir/overview.html">FHIR standard</a> started as a better way to exchange healthcare data, but it also provides a solid basis for deep analytics and Machine Learning at scale. This post looks at an example from the recent <a href="https://www.fhirdevdays.com/">FHIR DevDays</a> conference that does just that. You can also run the interactive <a href="https://github.com/cerner/bunsen-tutorial">FHIR data engineering tutorial</a> used in the conference yourself.</p>

<p>Our first step is to bring FHIR data into a data lake &mdash; a computational environment where our analysis can easily and efficiently work through petabytes of data. We&rsquo;ll look at some patterns for doing so, with concrete examples using the open source <a href="http://engineering.cerner.com/bunsen">Bunsen</a> and <a href="https://spark.apache.org/">Apache Spark</a> projects.</p>

<h3>FHIR StructureDefinitions Define the Schema</h3>

<p>The schema for every dataset you see here was generated from a <a href="https://www.hl7.org/fhir/stu3/structuredefinition.html">FHIR StructureDefinition</a>. There is a big gap between building a FHIR-based schema by hand and generating it directly from the source. Every field in every query here is fully documented as a <a href="https://www.hl7.org/fhir/stu3/resourcelist.html">FHIR resource</a>, making the FHIR documentation itself the primary reference to our datasets. This means the data is well-defined, curated, and familiar to those who have used FHIR.</p>

<h3>Data Catalogs over Filesystems</h3>

<p>Organizing data in files and directories is convenient, but it becomes unwieldy when working with a large number of complex datasets. Data catalogs can meet this need &mdash; and to offer a foundation for further data governance. The <a href="https://hive.apache.org/">Apache Hive metastore</a> is the most common way to catalog data in Hadoop-based environments and has native integration with Spark, so we organize data as one FHIR resource per table. Here&rsquo;s an example from the <a href="https://github.com/cerner/bunsen-tutorial/blob/fhirdevdays2018/data_engineering_tutorial.ipynb">tutorial used at FHIR DevDays</a>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">spark</span><span class="o">.</span><span class="n">sql</span><span class="p">(</span><span class="s">&#39;use tutorial_small&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">spark</span><span class="o">.</span><span class="n">sql</span><span class="p">(</span><span class="s">&#39;show tables&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">toPandas</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>Which prints a table like this:</p>

<table>
<thead>
<tr>
<th></th>
<th align="left">database       </th>
<th align="left">tableName          </th>
<th align="left">isTemporary </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td align="left">tutorial_small </td>
<td align="left">allergyintolerance </td>
<td align="left">false</td>
</tr>
<tr>
<td></td>
<td align="left">tutorial_small </td>
<td align="left">careplan           </td>
<td align="left">false</td>
</tr>
<tr>
<td></td>
<td align="left">tutorial_small </td>
<td align="left">claim              </td>
<td align="left">false</td>
</tr>
<tr>
<td></td>
<td align="left">tutorial_small </td>
<td align="left">condition          </td>
<td align="left">false</td>
</tr>
</tbody>
</table>


<p>&hellip;and so on. This makes it trivial to use intuitive database metaphors like <code>use tutorial_small</code> and <code>select * from condition</code>.</p>

<h3>First-class ValueSet Support</h3>

<p><a href="https://www.hl7.org/fhir/stu3/valueset.html">FHIR ValueSets</a> &mdash; collections of code values for a specific purpose &mdash; are essential to querying or working with FHIR data. Therefore they should be a first-class construct in our healthcare data lake. Here&rsquo;s a look at using some FHIR valuesets in our queries as supported by <a href="https://engineering.cerner.com/bunsen/0.4.0/">Bunsen</a>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">bunsen.stu3.valuesets</span> <span class="kn">import</span> <span class="n">push_valuesets</span><span class="p">,</span> <span class="n">valueset</span><span class="p">,</span> <span class="n">isa_loinc</span><span class="p">,</span> <span class="n">isa_snomed</span>
</span><span class='line'>
</span><span class='line'><span class="n">push_valuesets</span><span class="p">(</span><span class="n">spark</span><span class="p">,</span>
</span><span class='line'>               <span class="p">{</span><span class="s">&#39;ldl&#39;</span>          <span class="p">:</span> <span class="n">isa_loinc</span><span class="p">(</span><span class="s">&#39;18262-6&#39;</span><span class="p">),</span> <span class="c"># Loads LOINC descendants         </span>
</span><span class='line'>                <span class="s">&#39;hdl&#39;</span>          <span class="p">:</span> <span class="n">isa_loinc</span><span class="p">(</span><span class="s">&#39;2085-9&#39;</span><span class="p">),</span>
</span><span class='line'>                <span class="s">&#39;hypertension&#39;</span> <span class="p">:</span> <span class="n">isa_snomed</span><span class="p">(</span><span class="s">&#39;38341003&#39;</span><span class="p">),</span> <span class="c"># Loads SNOMED descendants</span>
</span><span class='line'>                <span class="c"># Loaded from a FHIR ValueSet resource</span>
</span><span class='line'>                <span class="s">&#39;chd&#39;</span>          <span class="p">:</span> <span class="n">valueset</span><span class="p">(</span><span class="s">&#39;http://engineering.cerner.com/bunsen/example/chd&#39;</span><span class="p">,</span> <span class="s">&#39;201806001&#39;</span><span class="p">)});</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now we can use these valuesets in our SQL queries via the <em>in_valueset</em> user-defined function:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">spark</span><span class="o">.</span><span class="n">sql</span><span class="p">(</span><span class="s">&quot;&quot;&quot;</span>
</span><span class='line'><span class="s">select subject.reference,</span>
</span><span class='line'><span class="s">       code.coding[0].system system,</span>
</span><span class='line'><span class="s">       code.coding[0].code code,</span>
</span><span class='line'><span class="s">       onsetDateTime</span>
</span><span class='line'><span class="s">from condition</span>
</span><span class='line'><span class="s">where in_valueset(code, &#39;chd&#39;)</span>
</span><span class='line'><span class="s">&quot;&quot;&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span><span class="o">.</span><span class="n">toPandas</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<table>
<thead>
<tr>
<th></th>
<th align="left">reference        </th>
<th align="left">system                 </th>
<th align="left">code     </th>
<th align="left">onsetDateTime      </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td align="left">urn:uuid:f88c&hellip; </td>
<td align="left"><a href="http://snomed.info/sct">http://snomed.info/sct</a> </td>
<td align="left">53741008 </td>
<td align="left">2014-09-14T07:45:47</td>
</tr>
<tr>
<td></td>
<td align="left">urn:uuid:d9ac&hellip; </td>
<td align="left"><a href="http://snomed.info/sct">http://snomed.info/sct</a> </td>
<td align="left">53741008 </td>
<td align="left">2017-05-22T06:56:19</td>
</tr>
<tr>
<td></td>
<td align="left">urn:uuid:7460&hellip; </td>
<td align="left"><a href="http://snomed.info/sct">http://snomed.info/sct</a> </td>
<td align="left">53741008 </td>
<td align="left">1974-08-06T06:50:32</td>
</tr>
<tr>
<td></td>
<td align="left">urn:uuid:5a28&hellip; </td>
<td align="left"><a href="http://snomed.info/sct">http://snomed.info/sct</a> </td>
<td align="left">53741008 </td>
<td align="left">2015-08-28T01:17:20</td>
</tr>
</tbody>
</table>


<p>It&rsquo;s worth looking at what&rsquo;s going on here: in a few lines of SQL, we are going from the rich (but somewhat complicated) FHIR Condition data model to a simple table of onset times of Coronary Heart Disease conditions.</p>

<h3>FHIR Data in Columnar Storage</h3>

<p>Users see a clear catalog of FHIR datasets, but something important is happening behind the scenes. Most data stores or serialization encodings like JSON keep data in a row-wise format. This means all columns from a given record are physically adjacent on disk, like this:</p>

<p> <img class="center" src="http://engineering.cerner.com/assets/2018-07-02-data-engineering-with-bunsen/row-wise.png" width="600"></p>

<p>This is a good fit for many workloads, but often not for analysis at scale. For instance, we may want to query the &ldquo;code&rdquo; column of several billion observation rows, and retrieve only those in a certain valueset. This is more efficient if columns are grouped together, like this:</p>

<p><img class="center" src="http://engineering.cerner.com/assets/2018-07-02-data-engineering-with-bunsen/columnar.png" width="600"></p>

<p>This is completely transparent to the user; she simply sees FHIR data from the specification.</p>

<p>So while users see the FHIR data model, it is encoded in a columnar file like Parquet. In such files, all of these &ldquo;code&rdquo; columns next to one another, allowing the queries to do tight scans over columns of interest without expensive seeking past unneeded data.</p>

<h3>Creating For-Purpose Views</h3>

<p>These are the building blocks that simplify otherwise complex analysis. For instance, if we want to identify people with diabetes-related risks, we can create a collection of simple views of the underlying data customized for that purpose. You can see the full example in the <a href="https://github.com/cerner/bunsen-tutorial/blob/fhirdevdays2018/data_engineering_tutorial.ipynb">Bunsen data engineering tutorial</a>, but we&rsquo;ll start with a dataframe of people with diabetes-related conditions as defined by a provided ValueSet:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">diabetes_conditions</span> <span class="o">=</span> <span class="n">spark</span><span class="o">.</span><span class="n">sql</span><span class="p">(</span><span class="s">&quot;&quot;&quot;</span>
</span><span class='line'><span class="s">select id condition_id,</span>
</span><span class='line'><span class="s">       subject.reference person_ref,</span>
</span><span class='line'><span class="s">       coding.system,</span>
</span><span class='line'><span class="s">       coding.code,</span>
</span><span class='line'><span class="s">       coding.display</span>
</span><span class='line'><span class="s">from condition</span>
</span><span class='line'><span class="s">     lateral view explode(code.coding) nested as coding</span>
</span><span class='line'><span class="s">where in_valueset(code, &#39;diabetes_risks&#39;)</span>
</span><span class='line'><span class="s">&quot;&quot;&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<table>
<thead>
<tr>
<th></th>
<th align="left">condition_id     </th>
<th align="left">person_ref       </th>
<th align="left">system                 </th>
<th align="left">code     </th>
<th align="left">display    </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td align="left">urn:uuid:9c72&hellip; </td>
<td align="left">urn:uuid:5a28&hellip; </td>
<td align="left"><a href="http://snomed.info/sct">http://snomed.info/sct</a> </td>
<td align="left">44054006 </td>
<td align="left">Diabetes</td>
</tr>
<tr>
<td></td>
<td align="left">urn:uuid:56d5&hellip; </td>
<td align="left">urn:uuid:214f&hellip; </td>
<td align="left"><a href="http://snomed.info/sct">http://snomed.info/sct</a> </td>
<td align="left">15777000 </td>
<td align="left">Prediabetes</td>
</tr>
<tr>
<td></td>
<td align="left">urn:uuid:69de&hellip; </td>
<td align="left">urn:uuid:7f4d&hellip; </td>
<td align="left"><a href="http://snomed.info/sct">http://snomed.info/sct</a> </td>
<td align="left">15777000 </td>
<td align="left">Prediabetes</td>
</tr>
</tbody>
</table>


<p>We can inspect and validate this dataframe, and then move onto the next part of our analysis. Let&rsquo;s say we want to exclude anyone who has had a wellness visit in the last two years from our analysis. We just build a dataframe with them:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">wellness_visits</span> <span class="o">=</span> <span class="n">spark</span><span class="o">.</span><span class="n">sql</span><span class="p">(</span><span class="s">&quot;&quot;&quot;</span>
</span><span class='line'><span class="s">select subject.reference person_ref,</span>
</span><span class='line'><span class="s">       period.start encounter_start,</span>
</span><span class='line'><span class="s">       period.end encounter_end</span>
</span><span class='line'><span class="s">from encounter</span>
</span><span class='line'><span class="s">where class.code = &#39;WELLNESS&#39; and</span>
</span><span class='line'><span class="s">      period.start &gt; &#39;2016&#39;</span>
</span><span class='line'><span class="s">&quot;&quot;&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<table>
<thead>
<tr>
<th></th>
<th align="left">person_ref       </th>
<th align="left">encounter_start     </th>
<th align="left">encounter_end      </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td align="left">urn:uuid:f88c&hellip; </td>
<td align="left">2016-08-21T07:45:47 </td>
<td align="left">2016-08-21T07:45:47</td>
</tr>
<tr>
<td></td>
<td align="left">urn:uuid:f88c&hellip; </td>
<td align="left">2017-08-27T07:45:47 </td>
<td align="left">2017-08-27T07:45:47</td>
</tr>
<tr>
<td></td>
<td align="left">urn:uuid:d9ac&hellip; </td>
<td align="left">2016-05-16T06:56:19 </td>
<td align="left">2016-05-16T06:56:19</td>
</tr>
</tbody>
</table>


<p>Now that we&rsquo;ve loaded and analyzed our dataframes, we can simply exclude those with wellness visits by doing an anti join between them:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">diabetes_without_wellness</span> <span class="o">=</span> <span class="n">diabetes_conditions</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">wellness_visits</span><span class="p">,</span>
</span><span class='line'>                                                     <span class="p">[</span><span class="s">&#39;person_ref&#39;</span><span class="p">],</span>
</span><span class='line'>                                                     <span class="s">&#39;left_anti&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>The result is a simple table containing the cohort we&rsquo;re looking for! Check out the complete <a href="https://github.com/cerner/bunsen-tutorial/blob/fhirdevdays2018/data_engineering_tutorial.ipynb">tutorial notebook</a> for the full story.</p>

<h3>Reproducible Results from Immutable Data</h3>

<p>Repeatability is an essential property for deep analysis. Re-running the same notebook in the future must load <em>exactly</em> the same data and produce <em>exactly</em> the same results. This gives us the controls needed to build on and iteratively improve previous analysis over time. Fortunately, using immutable data partitions are a common pattern in this type of system. We won&rsquo;t go into depth here, but will touch on a couple good practices:</p>

<ul>
<li>Data is never mutated. Updates coming into our data lake are appended to previous data, and we can reproduce previous results by only working with data that was available at a given processing time.</li>
<li>If necessary, a policy to archive or remove previous views of data from the data catalog is used to manage size.</li>
</ul>


<p>Finally, building on such a FHIR-based data lake enables portability. The predictive model or analysis output is fully captured starting with portable data &mdash; which means it can be more easily deployed into other systems. FHIR has made great progress in exchanging data in online systems, and we see a lot of promise for data science at scale as well.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cerner's Open Source Contributions for Interoperability Developers]]></title>
    <link href="http://engineering.cerner.com/blog/cerners-open-source-contributions-for-interoperability-developers/"/>
    <updated>2018-06-21T00:00:00-05:00</updated>
    <id>http://engineering.cerner.com/blog/cerners-open-source-contributions-for-interoperability-developers</id>
    <content type="html"><![CDATA[<p>Open source and open standards encourage collaboration around innovation that advances the health care industry through improved interoperability. Developers across health care can come together and use open source code to share information, as well as develop and continually improve apps to support better health outcomes for patients.</p>

<p>At Cerner, developing open platforms that support interoperability standards like SMART® and FHIR® is integral to our mission of transforming health care. In addition to implementing these standards in our platforms, we also participate in organizations like <a href="http://www.hl7.org/">HL7</a> and the <a href="http://argonautwiki.hl7.org/index.php?title=Main_Page">Argonaut Project</a> to help shape and develop these standards. Cerner attends and speaks at conferences on interoperability like <a href="https://www.fhirdevdays.com/boston/">FHIR DevDays this week in Boston, MA</a>.</p>

<p>In addition to all of this work, we&rsquo;re continually developing open source projects and work for the benefit of all interoperability developers. As we speak on and support interoperability this week in Boston for FHIR DevDays, we thought it would be great to highlight our current open source interoperability work over the past couple of years.</p>

<h3>SMART on FHIR Tutorial</h3>

<p>A couple of years ago, Cerner developed a <a href="https://engineering.cerner.com/smart-on-fhir-tutorial/">tutorial</a> walking developers through the process of creating their first <a href="https://smarthealthit.org/">SMART on FHIR application</a>. With this hands-on tutorial, developers can write and deploy their SMART on FHIR application, running it against Cerner&rsquo;s <a href="https://code.cerner.com/"><em>code</em></a> Console and our <a href="https://fhir.cerner.com/">FHIR Sandbox</a>. Because SMART applications are interoperable with other vendors, the tutorial also walks the developer through running that same app against other sandboxes like the one provided by the <a href="https://launch.smarthealthit.org/">SMART Health IT project</a>. Over 700 developers have completed this tutorial as of June, 2018.</p>

<p>You can find the source code for the tutorial at <a href="https://github.com/cerner/smart-on-fhir-tutorial">https://github.com/cerner/smart-on-fhir-tutorial</a></p>

<h3>SMART on FHIR Apps in Embedded Browsers</h3>

<p>Over the years, Cerner has contributed to several changes to the popular open source JavaScript library (<a href="https://github.com/smart-on-fhir/client-js">fhir-client.js</a>, maintained by the SMART Health IT organization), used by many SMART app developers for launching and interacting with the FHIR API from their web-based SMART application. Running these types of applications within an embedded IE browser in a Windows application (like Cerner&rsquo;s PowerChart® EHR) requires a bit of added effort to ensure SMART apps running concurrently do not exhibit critical patient safety issues. Cerner released an <a href="https://github.com/cerner/fhir-client-cerner-additions">open source library</a>, used in conjunction with fhir-client.js, to prevent these issues from happening. Our open source library is in use by SMART app developers running their apps not only within Cerner EHR environments, but also within other EHR vendor environments.</p>

<p>You can find the source code for this project at <a href="https://github.com/cerner/fhir-client-cerner-additions">https://github.com/cerner/fhir-client-cerner-additions</a></p>

<h3>ASCVD Risk Calculator SMART Application</h3>

<p>Through collaborative efforts, Cerner and <a href="https://www.dukehealth.org/">Duke University Health System</a> recognized a need for the development of a more clinically relevant cardiac risk calculator app. To solve for this, together we developed the open source <a href="https://apps.smarthealthit.org/app/ascvd-risk-calculator">ASCVD Risk Calculator SMART application</a>. Not only is the app freely available to all Cerner clients, but all our work on the app is open source so that other hospitals and health systems can  run and modify it to meet their needs.</p>

<p>You can find the ASCVD Risk Calculator source code at <a href="https://github.com/cerner/ascvd-risk-calculator">https://github.com/cerner/ascvd-risk-calculator</a></p>

<h3>CDS Hooks</h3>

<p><a href="https://cds-hooks.org">CDS Hooks</a> is an emerging standard for interoperable clinical decision support. Similar to our SMART on FHIR tutorial, Cerner wrote an <a href="https://github.com/cerner/cds-services-tutorial">open source, hands-on tutorial</a> that walks a developer through writing their first CDS Service.</p>

<p>Cerner is also the primary developer and maintainer of the <a href="https://sandbox.cds-hooks.org/">CDS Hooks Sandbox</a>, an open source Sandbox used by the CDS Hooks community. The CDS Hooks Sandbox has been proven to be incredibly valuable and helps developers test and demonstrate their CDS Services against any FHIR server of their choosing.</p>

<p>You can find the CDS Hooks Sandbox source code at <a href="https://github.com/cds-hooks/sandbox">https://github.com/cds-hooks/sandbox</a></p>

<h3>Bunsen: FHIR and Big Data</h3>

<p>Big data can have a great impact on health care when used correctly. Health care organizations are analyzing big data to improve health care in a number of ways, from increasing revenue and improving efficiency to predicting diseases and improving patient care. As technology advance, health care organizations will continue to gather more data and developers will need to find ways to make that data useful and actionable.</p>

<p>Cerner has many years of experience working with big data. To support big data developers, we made Bunsen open source. Bunsen is a project that makes it easy for developers to explore, transform and analyze FHIR data with Apache Spark. In addition, Cerner recently released a <a href="https://github.com/cerner/bunsen-tutorial">tutorial for getting started with Bunsen</a>. You can <a href="https://engineering.cerner.com/blog/announcing-bunsen-fhir-data-with-apache-spark/">read more about Bunsen on our blog post here</a>.</p>

<p>You can view the Bunsen source code at <a href="https://github.com/cerner/bunsen">https://github.com/cerner/bunsen</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SREcon18 Recap]]></title>
    <link href="http://engineering.cerner.com/blog/srecon18-recap/"/>
    <updated>2018-06-19T00:00:00-05:00</updated>
    <id>http://engineering.cerner.com/blog/srecon18-recap</id>
    <content type="html"><![CDATA[<p>This past spring, I had the pleasure of attending <a href="https://www.usenix.org/conference/srecon18americas">SREcon18</a> in Santa Clara, California. If you have never heard about SREcon or the term SRE then let me diverge for a moment to describe. SRE, or Site Reliability Engineer, was coined by Google employees back in 2003 when a team of software engineers were tasked with running a production environment. It&rsquo;s the new hotness in the technology world, so an internet search will turn up a bunch of topics. If you are interested in learning more, I recommend sticking with the more trusted sources:</p>

<ul>
<li><a href="https://landing.google.com/sre/">Google</a> (an obvious choice)</li>
<li><a href="https://landing.google.com/sre/book.html">SRE book</a></li>
<li><a href="https://en.wikipedia.org/wiki/Site_Reliability_Engineering">SRE Wikipedia entry</a></li>
</ul>


<p>Since SRE concepts have been codified, organized, and documented by the creators, the above resources are easy to explore without getting conflicting information from other entities who have taken the ideas and modified them to fit their organization. There is a lot of excitement in the industry around the SRE concept and there&rsquo;s a lot of overlap between SRE and DevOps. Having been working in this industry for a while now, this is a much-needed evolution in the operations and development roles.</p>

<p>SREcon started in 2014, so it is relatively new and is hosted by <a href="https://www.usenix.org/">Usenix Association</a>. Usenix has been hosting technical conferences since 1975 and one of their tenants is to host vendor-neutral events. I have been to a few vendor hosted conferences over the past few years and they are always heavy on the sales and light on the ideas. The sales aspect of these conferences got to the point where I was burned out and looking for something idea based. SREcon was the complete inverse, heavy on the ideas and light on the sales. It fit my need perfectly. My only complaint, and this is minor, was that most of the speakers selected this year were backed by big name tech companies, i.e. Google, Facebook, LinkedIn, Netflix, etc. A fellow attendee I was talking to mentioned that they enjoyed the company diversity this year over previous years, though. Apparently, the tone of the conference in previous years was Google heavy, i.e. &ldquo;This is the Google Way&rdquo; which is not surprising since that&rsquo;s where it all started. The conference was being held in the heart of Silicon Valley therefore, the proximity made it reasonable to have many presenters come from companies in the valley. I fully expect to see more diversity in the coming years. SREcon19 was announced to be held in Brooklyn, NY, so I would not be surprised if there are many east coast companies represented. Additionally, I attended the SREcon Americas conference. Showcasing another aspect of diversity, there are SREcons in Europe/Middle East/Africa and Asia/Australia, so it&rsquo;s become a world-wide conference.</p>

<p>The idea-sharing phenomenon of SREcon played an important role in my decision to attend, since I&rsquo;m leading an automation development team in CernerWorks℠. CernerWorks is Cerner&rsquo;s managed services organization responsible for hosting, managing, and monitoring our client&rsquo;s systems in order to provide the most reliable, highest performing and cost effective delivery of technology services for healthcare. My team is focused on automation in the client aligned systems management space. That&rsquo;s just a fancy way of saying that our focus is on the non-cloud solutions. We are focusing on solution provisioning, configuration management, and upgrades. The work we are doing aligns well with the tenants of SRE, DevOps and other philosophies that have been discussed in the past few years. I am very interested in these philosophies simply because change is hard, especially when it comes to changes in a culture with an established mentality of doing things a certain way. The technical part of our job is easier in my opinion since technology is always changing.</p>

<p>Some of the more interesting sessions I attended talked about patterns and behaviors that we can learn from other industries. For example, the way that firefighters and other first responders react to incidents and the command structures they put in place outline ways that we can improve how we deal with incidents. Having a plan and structure when engaging with an incident has many benefits. It allows you to define what normal operations for your team look like versus what emergency operations looks like. Determining the chain of command and defining pre-set roles that anyone can fit into can help streamline the time to respond and the emergency command hierarchy of the team. Other industries, such as oil and gas refineries, must have strong contingency plans in place in order to not go boom when things go south. There are a lot of patterns, behaviors, and philosophies that we can learn from almost any industry out there if we open our eyes.</p>

<p>A key topic for the conference is learning from failures and mistakes. The idea of a blameless postmortem was discussed at length in multiple talks and conversations. The need for such a thing stems from our human nature to want to assign blame and fault when dealing with problems. But in many ways this type of behavior causes actions to be hidden out of fear of retribution. A blameless postmortem comes from the idea that learning and preventing is more important than assigning blame. <a href="https://codeascraft.com/">Etsy</a>, for example, has an annual award for the employee who&rsquo;s made the biggest mistake. The culture they are building is one where accidents are a source of learning rather than a source of embarrassment. This is quite an interesting concept.</p>

<p>Working in the technology industry and never having been to Silicon Valley was surreal. Seeing big company names on the side of buildings and realizing those were the corporate headquarters of companies whose software I have interacted with for years was an experience. One of the nights, I took a trip to the Googleplex to walk around the campus. It was a beautiful campus with trees and flowers everywhere and the weather was amazing. The campus was abuzz with people and activity that you would expect to take place at Google late at night. While walking a thought started forming in my mind around the type of work we do at Cerner. A thought that continued to form later at the conference when I spoke with development teams from various big-name tech companies. It was rewarding to talk about how we are using technology to make healthcare better. These conversations would usually end with the team from the big tech company expressing admiration, respect, and praise for the work we are doing. The Googles, Facebooks, Twitters, and the like are doing interesting things, and it&rsquo;s easy to get distracted by those names, but the problems that we are solving have real impact on the lives of our fellow humans and we shouldn&rsquo;t take that for granted.</p>

<p>SREcon18 was worth the trip, but if you couldn&rsquo;t attend this year&rsquo;s, previous years, or future SREcons you don&rsquo;t need to worry about missing out. Usenix has an open access policy which means that slides, videos, and audio of all the talks are available after of the conference. I strongly recommend reviewing the <a href="https://www.usenix.org/conference/srecon18americas/program">program for this year&rsquo;s conference</a> and watching any of the talks that catch your fancy.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Say Hello to the 2018 Summer Interns]]></title>
    <link href="http://engineering.cerner.com/blog/say_hello_to_the_2018_summer_interns/"/>
    <updated>2018-05-24T00:00:00-05:00</updated>
    <id>http://engineering.cerner.com/blog/say_hello_to_the_2018_summer_interns</id>
    <content type="html"><![CDATA[<p>Throughout the month of May, teams across Cerner’s Engineering space have welcomed 197 software interns to our campuses in Kansas City and Malvern. Ranging from rising seniors in high school to rising seniors in college, these interns will be working alongside Cerner’s full time engineers to enhance and expand upon their current skillsets.</p>

<p>While interning at Cerner, these associates will experience firsthand the look and feel of a day in the life of a full time software engineer. Potential projects include:</p>

<ul>
<li>working with data ETL and web technologies to produce analytical dashboards</li>
<li>working on features and capabilities of our solutions to improve the overall experience of Cerner’s consumer solutions and/or development processes, and</li>
<li>adding functionality to some cloud-based applications to provide more troubleshooting capabilities.</li>
</ul>


<p>The variety in projects interns will be working on allows for work in a robust development ecosystem using tools like JIRA, Crucible, Github and languages like Java, Javascript, and Ruby. Our interns have opportunities to work on real projects with real world impact in the healthcare space.</p>

<p>In addition to their work, interns will attend a variety of culture and networking events like our internal developers conference, <a href="https://engineering.cerner.com/2013/08/devcon">DevCon</a>, a bi-weekly Tech Speakers Series, an intern-only hackathon, and a family day where interns are encouraged to bring their families to see their work environment and projects.
Cerner has welcomed three intern groups in Kansas City and one in Malvern, with one more group to start in Kansas City next week. Stay tuned this summer for an in-depth look at a few of the projects our interns work on.</p>

<table cellpadding="5">
  <tr>
    <td>
      <img class="center" src="http://engineering.cerner.com/assets/2018-05-24-say_hello_to_the_2018_summer_interns/interns_1.jpg" width="300">
    </td>
    <td>
      <img class="center" src="http://engineering.cerner.com/assets/2018-05-24-say_hello_to_the_2018_summer_interns/interns_2.jpg" width="300">
    </td>
    <td>
      <img class="center" src="http://engineering.cerner.com/assets/2018-05-24-say_hello_to_the_2018_summer_interns/interns_3.jpg" width="300">
    </td>
  </tr>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Code Reviews: There Is a Better Way]]></title>
    <link href="http://engineering.cerner.com/blog/code-reviews-there-is-a-better-way/"/>
    <updated>2018-05-08T00:00:00-05:00</updated>
    <id>http://engineering.cerner.com/blog/code-reviews-there-is-a-better-way</id>
    <content type="html"><![CDATA[<p>At Cerner, peer review of code is an important job. We have found it to greatly improve the quality of code and improve a team’s knowledge of the codebase. Through code review discussions, newer engineers are able to learn on valuable areas to question or challenge when something is being changed. While we heavily embrace the practice of peer code review, we also recognize it can make an engineer’s life challenging when you are overwhelmed with code to review. Furthermore, it can be large source of project delay when points of coordination are not managed well. In this blog, we will cover some tactics that you can apply to improve how you approach code reviews.</p>

<h2>Smaller code reviews are better code reviews</h2>

<table cellpadding="5">
  <tr>
    <td>
      <div class='pull-left' markdown="1">
        The first step of making a code review inviting for others to provide feedback, is by making the scope of the review small. This generally requires thought and planning on how to incrementally present code for review, allowing each review to be smaller in size which can be safely included into the codebase in isolation. This can ultimately help morale of a team by avoiding monster-size reviews from being stagnate, and never reaching a point of completion due to amount of work necessary to review or the length of feedback that exists. By having the review small, a laser set of focus can be achieved to promptly and effectively complete the review, providing a positive reinforcement of being able to also complete the work.
      </div>
    </td>
    <td>
      <img class="center" src="http://engineering.cerner.com/assets/2018-05-08-code-reviews-there-is-a-better-way/code-review-size.png">
    </td>
  </tr>
</table>


<h2>Have machines filter what code qualifies for review</h2>

<table cellpadding="5">
  <tr>
    <td>
      <div class='pull-left' markdown="1">
        We recently had a &#8220;GitHub Day&#8221; at our Innovations campus, where GitHub and other Cerner engineers shared how to improve your use of source code management. In these presentations, a quote was shared that rang true:
        <blockquote><p>We are more receptive to feedback from pedantic robots than pedantic people.</p></blockquote>
        When it comes to a code review, it is easy to point out simple flaws in the code which relates to formatting or basic anti-patterns in a given language. However, should humans be spending time on these types of issues in a code review? Machines are well suited for testing code through linters and static analysis, where formatting rules and known bad patterns can be quickly identified. By focusing on having your CI system do these types of tests on your code, and failing your build when formatting problems emerge, you now have a filter which blocks a large set of noise from entering into a code review. As a result, humans don’t engage in a code review until the code actually builds (which would encompass both static and dynamic forms of tests). Furthermore, it is easier to receive these minor points from a machine (a bot which is communicating the results of your build), versus having a team member spend time pointing out all the minor things you forgot to check or format correctly. In the end, humans apply their creative mind on discussing deeper topics on the design and intentions of the code, versus getting distracted with noise of simple things that can be addressed earlier by machines.
      </div>
    </td>
    <td>
      <img class="center" src="http://engineering.cerner.com/assets/2018-05-08-code-reviews-there-is-a-better-way/code-review-human-bot.png">
    </td>
  </tr>
</table>


<h2>Agreed upon conventions</h2>

<table cellpadding="5">
  <tr>
    <td>
      <div class='pull-left' markdown="1">
        Building upon the previous point, teams should have agreed upon conventions on things like style and code formatting, so that those things can be automatically found (and even fixed with the proper tooling).  This eliminates the propensity for style/formatting comments in code reviews which detract from the actual purpose of finding substantive issues within the code. If you find code styling questions or debates are occurring in the code review, ensure the team comes to an agreement on the convention, and that styling rule gets fed into your linter (ex. CheckStyle, Rubocop, IDE formatters) to avoid it from entering into a code review again. Furthermore, this helps reinforce the “boy scout rule”: Always leave the campground cleaner than you found it. By having your linter now embrace this new formatting rule, existing codebases that you start changing in the future will be invited to be updated as well, versus allowing the drift to continue to occur.
      </div>
    </td>
    <td>
      <img class="center" src="http://engineering.cerner.com/assets/2018-05-08-code-reviews-there-is-a-better-way/code-review-conventions.png">
    </td>
  </tr>
</table>


<h2>&ldquo;How I would have done it&rdquo;</h2>

<p>When comments emerge on a code review which are being conveyed as opinions, like “I’d have done it this way,” this can detract the focus of the code review away from correctness and more on personal preferences. In this section we will discuss two challenges when including personal preferences in code reviews: the distractions and how they can be interpreted.</p>

<h3>Distraction on personal preferences</h3>

<p>While personal preferences may help the readability of the code (based on the viewer), it is also important to provide the larger “why” when sharing opinions. When multiple opinions are being shared within the review, it may invite for a larger debate that might simply derail the ultimate focus of the code review. As a result, the code review may languish and not be completed due to the debate of opinions.</p>

<h3>Accidental preference becoming &ldquo;law&rdquo;</h3>

<p>When opinions like this are shared, especially when communicated from someone more senior on the team, their opinion may be viewed as “law”. In that, it is simply accepted by the engineer to apply the change because the source of the opinion carries a large amount of weight in the discussion. However, it is expected that no personal preference would simply be applied without additional thought and reason. When personal preferences are brought up in a review, it is best to capture and understand the “why” versus assuming the opinion is simply true or accepting it as its face value.</p>

<h2>Moderator</h2>

<p>All code reviews should have a moderator for the review to ensure the review doesn’t get off track (discussing items not applicable to the review, circular discussions, personal preference comments, etc).  The moderator isn’t necessarily an engineer reviewing the code, but could be the technical project manager for the project where the code resides.  The moderator is also responsible for ensuring comments are addressed and the review is closed when appropriate.</p>

<h2>Review agility</h2>

<p>Code reviews should be given priority, as the author is being blocked waiting for the review to be completed.  In order to achieve review agility, code reviews must be small (as mentioned above), so that reviewers are able to process the content of the review and provide substantive feedback easily. In order to give reviews priority, your team should actively work to ensure people are planning accordingly when they are assigned to reviews. Based on the expertise on the team, it is not uncommon for some team members to become a bottleneck on the team due to amount of code reviews that are assigned to them. It is important for the team to identify this issue, and ensure the team is growing other team members to shed the load of reviews by building up the expertise.</p>

<h2>Conclusion</h2>

<p>While peer code reviews are a crucial component of our software development process, they also require evaluation on how they can be improved. These are simply a few tactics that can be applied to help improve how you approach code reviews. As with the Agile process, we want to continuously improve how we build software, and by focusing on how to improve this process, you can ultimately improve the quality and delivery time of your software.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ShipIt XI Day: Spring 2018]]></title>
    <link href="http://engineering.cerner.com/blog/shipit-xi-spring-2018/"/>
    <updated>2018-04-18T00:00:00-05:00</updated>
    <id>http://engineering.cerner.com/blog/shipit-xi-spring-2018</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://engineering.cerner.com/assets/2018-04-18-shipit-xi-spring-2018/shipit-xi-1.png" width="600"></p>

<p>On March 8th and 9th, 17 teams of Cerner associates competed for the Golden Keyboard during our 11th ShipIt Day. During this 24-hour hackathon, associates were challenged to create something innovative, usable, and value-adding. This was the fourth ShipIt held at our new Innovations Campus, leveraging the wonderful collaborative spaces available.</p>

<p>With Shipit XI, we expanded upon a time-honored tradition of this event, the traveling trophy Golden Keyboard. This keyboard, adorned with symbolic trinkets from past winners, provides an opportunity for winning teams to defend the trophy and leave their mark in ShipIt history.</p>

<div align="center">
  <table>
    <tr>
      <td align="center">
        <img class="center" src="http://engineering.cerner.com/assets/2018-04-18-shipit-xi-spring-2018/shipit-xi-2.png" width="300">
        <sub>Golden Keyboard</sub>
      </td>
    </tr>
  </table>
</div>


<p>However, we realized as ShipIt grew, the category for winning the &ldquo;People&rsquo;s Choice Award&rdquo; (the favorite as voted by the audience agnostic of the judges’ selection) needed to have something more special to symbolize its importance. As a result, we introduced the Golden Mouse! This trophy, while separate from the Golden Keyboard, is another peripheral that a team can win by vote of their peers. With ShipIt XI, the Golden Mouse is now added to the tradition.</p>

<div align="center">
  <table>
    <tr>
      <td align="center">
        <img class="center" src="http://engineering.cerner.com/assets/2018-04-18-shipit-xi-spring-2018/shipit-xi-3.png" width="300">
        <sub>Golden Mouse</sub>
      </td>
    </tr>
  </table>
</div>


<p>This ShipIt featured Reliability as its theme. This theme highlighted the work that is continually done to improve the reliability our systems. Reliability, it is the most fundamental feature! By including this theme, we also introduced a new winning category for best project that improved reliability.</p>

<p>Like all ShipIts, signs of creativity, collaboration, and intense problem solving were abundant all night.</p>

<div align="center">
  <table>
    <tr>
      <td align="center">
        <img class="center" src="http://engineering.cerner.com/assets/2018-04-18-shipit-xi-spring-2018/shipit-xi-4.png" width="600">
        <sub>Registration and kick-off</sub>
      </td>
    </tr>
    <tr>
      <td align="center">
        <img class="center" src="http://engineering.cerner.com/assets/2018-04-18-shipit-xi-spring-2018/shipit-xi-5.png" width="600">
        <sub>Strategy planning</sub>
      </td>
    </tr>
    <tr>
      <td align="center">
        <img class="center" src="http://engineering.cerner.com/assets/2018-04-18-shipit-xi-spring-2018/shipit-xi-6.png" width="600">
        <sub>Focused concentration</sub>
      </td>
    </tr>
    <tr>
      <td align="center">
        <img class="center" src="http://engineering.cerner.com/assets/2018-04-18-shipit-xi-spring-2018/shipit-xi-7.png" width="600">
        <sub>Abundant caffeine</sub>
      </td>
    </tr>
  </table>
</div>


<p>In addition to café vouchers for breakfast and lunch, ShipIt XI featured a taco bar for dinner. Participants enjoyed unlimited tacos and delicious churros for dessert!</p>

<div align="center">
  <table>
    <tr>
      <td align="center">
        <img class="center" src="http://engineering.cerner.com/assets/2018-04-18-shipit-xi-spring-2018/shipit-xi-8.png" width="300">
      </td>
    </tr>
  </table>
</div>


<p>ShipIt XI also hosted a ping-pong “March Madness” tournament to provide an opportunity for the participants take a break and flaunt their athletic prowess.</p>

<div align="center">
  <table>
    <tr>
      <td align="center">
        <img class="center" src="http://engineering.cerner.com/assets/2018-04-18-shipit-xi-spring-2018/shipit-xi-9.png" width="600">
        <sub>The dreaded Jake Kramer power serve</sub>
      </td>
    </tr>
  </table>
</div>


<p>Demos always arrive quicker than anticipated. Ready or not, 9am rolled around and demos were in full swing. Teams were given four minutes to present their projects to a panel of judges, consisting of Julie Schlabach, Kevin Shekleton, Jeff Dittmer, and Chad Todd.  Special thank you to those folks for spending their morning with us and supporting ShipIt Day!</p>

<div align="center">
  <table>
    <tr>
      <td align="center">
        <img class="center" src="http://engineering.cerner.com/assets/2018-04-18-shipit-xi-spring-2018/shipit-xi-10.png" width="600">
        <sub>Team SPACES RUNNER – 1st Place</sub>
      </td>
    </tr>
  </table>
</div>


<p>Coming in first place was Team SPACES RUNNER (Ryan Scheidter, Darius Washington, Miguel Fernandez, Aarthi Gunda, and Sundeepa Godavarti).</p>

<p>“Space Runner is a visualization tool to show previously run, currently running, and scheduled to run Apache Spark jobs. It also provides some color coding for jobs that take over the average amount of time of previous runs, along with links to the Spark UI where we can view more details about the job. This tool is being used as a visualization of my team’s (Spaces Platform) dev domain to see what ran at what time, what is running, and what is about to start. This is a huge asset in terms of seeing how the domain is running, when it has too many things scheduled, and when it has free time coming up to manually run a job. This tool takes far less time than manually looking at the frequency jobs are scheduled and determining if the domain is free or overbooked.”</p>

<p>Congratulations SPACES RUNNER!</p>

<div align="center">
  <table>
    <tr>
      <td align="center">
        <img class="center" src="http://engineering.cerner.com/assets/2018-04-18-shipit-xi-spring-2018/shipit-xi-11.png" width="600">
        <sub>Team PSA – 2nd Place</sub>
      </td>
    </tr>
  </table>
</div>


<p>Second place went to Team PSA (Aaron Noll, Bryce McDonald, Jesse Gilbert, Bennet Lovejoy, and Snehil Wakchaure).</p>

<p>“Team Patient Safety Analytics (PSA) developed a SMART on FHIR app with the aim of making hospitals safer and more reliable. This goal of this app is to decrease the time required to report patient safety events while also increasing accuracy by 1) Populating basic demographic fields automatically for a report (currently manually entered) and 2) Embedding the app within PowerChart to reduce the number of clicks necessary to create a report. Over time, the app could also enable Cerner to add more value by helping hospitals improve through analysis of their data and comparison against peers while also providing reporting utilities for clients to monitor and improve their processes.”
 
Way to go PSA!</p>

<div align="center">
  <table>
    <tr>
      <td align="center">
        <img class="center" src="http://engineering.cerner.com/assets/2018-04-18-shipit-xi-spring-2018/shipit-xi-12.png" width="600">
        <sub>Team Pedantic Beasts – 3rd Place</sub>
      </td>
    </tr>
  </table>
</div>


<p>Team Pedantic Beasts (Robert Ryterski, Paul Dennis, Ian Kottman, and Anthony Ross) took third place.</p>

<p>“MCop is a linter for Marathon app definitions. It statically analyzes definitions for problems such as syntax errors, unstable deployment configuration, and departures from best practices.”</p>

<p>Great job Pedantic Beasts!</p>

<div align="center">
  <table>
    <tr>
      <td align="center">
        <img class="center" src="http://engineering.cerner.com/assets/2018-04-18-shipit-xi-spring-2018/shipit-xi-13.png" width="600">
        <sub>Team Reliabilibuddies – Best Reliability Themed Project and People’s Choice: Best Team Name</sub>
      </td>
    </tr>
  </table>
</div>


<p>The winner of the sponsored project theme of “Reliability” was Team Reliabilibuddies (Siri Varma Vegiraju, Nathan Schile, Vu Tran, Lucas Chandler, and Venkatesh Sridharan). Reliabilibuddies also won the people’s choice Best Team Name!</p>

<p>Nicely done Reliabilibuddies!</p>

<div align="center">
  <table>
    <tr>
      <td align="center">
        <img class="center" src="http://engineering.cerner.com/assets/2018-04-18-shipit-xi-spring-2018/shipit-xi-14.png" width="600">
        <sub>Team The Centurions – People’s Choice: Best Project</sub>
      </td>
    </tr>
  </table>
</div>


<p>Winning the brand new Golden Mouse for people’s choice Best Project was team The Centurions (Mohan Chamarthy, Sanket Korgaonkar, Saranth Govindaraju, Vamsi Krishna Guntupalli, and Shyam Gopal Rajanna). Congratulations and enjoy your cheeseballs!</p>

<div align="center">
  <table>
    <tr>
      <td align="center">
        <img class="center" src="http://engineering.cerner.com/assets/2018-04-18-shipit-xi-spring-2018/shipit-xi-15.png" width="600">
        <sub>Team Whalenado – People’s Choice: Best Presentation</sub>
      </td>
    </tr>
  </table>
</div>


<p>Winning a glorious tub of cheeseballs is Team Whalenado (Mithun Singh, David Crowder, Nick Overfield, and Michael Rzepka) for people’s choice Best Presentation.</p>

<div align="center">
  <table>
    <tr>
      <td align="center">
        <img class="center" src="http://engineering.cerner.com/assets/2018-04-18-shipit-xi-spring-2018/shipit-xi-16.png" width="600">
        <sub>Winning teams walked away with some awesome prizes such as wireless headphones, TileMates, Echo Dots, and drones.</sub>
      </td>
    </tr>
  </table>
</div>


<p>ShipIt continues to be a great way for associates to explore new solutions to problems, build relationships within different organizations, and most importantly, enjoy themselves. ShipIt Day XI was a great success. The projects were creative and have potential to bring value Cerner’s associates and clients.</p>

<p>Save the Date: ShipIt Day returns August 9th and 10th! If you are interested in learning more about other ShipIt Days, see these earlier posts:</p>

<ul>
<li><a href="http://engineering.cerner.com/blog/shipit-x-day-winter-2017/">ShipIt Day X Winter 2017</a></li>
<li><a href="http://engineering.cerner.com/blog/shipit-ix-day-summer-2017/">ShipIt Day IX Summer 2017</a></li>
<li><a href="http://engineering.cerner.com/blog/shipit-day-viii-spring-2017/">ShipIt Day VIII Spring 2017</a></li>
<li><a href="http://engineering.cerner.com/blog/shipit-vii-day-winter-2016/">ShipIt Day VII Winter 2016</a></li>
<li><a href="https://www.youtube.com/watch?v=iqTp0dmLgUk">ShipIt Day Winter 2016 Highlight Reel</a></li>
<li><a href="http://engineering.cerner.com/blog/fall-2016-shipit-day/">ShipIt Day Fall 2016</a></li>
<li><a href="http://engineering.cerner.com/blog/spring-2016-shipit-day/">ShipIt Day Spring 2016</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cerner and iControl]]></title>
    <link href="http://engineering.cerner.com/blog/cerner-and-icontrol/"/>
    <updated>2018-03-13T00:00:00-05:00</updated>
    <id>http://engineering.cerner.com/blog/cerner-and-icontrol</id>
    <content type="html"><![CDATA[<p>At Cerner, we manage our own infrastructure and a big part of that is managing F5 load balancers. If you are a Ruby developer or a network engineer and regularly work with F5s, then I have good news! I&rsquo;ve created a gem that abstracts iControl&rsquo;s REST API. It makes working with the API easy to understand and eases the effort required to automate changes across many devices.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">api</span> <span class="o">=</span> <span class="ss">IcontrolRest</span><span class="p">:</span><span class="ss">:Client</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">host</span><span class="p">:</span> <span class="s1">&#39;1.2.3.4&#39;</span><span class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="s1">&#39;user&#39;</span><span class="p">,</span> <span class="ss">pass</span><span class="p">:</span> <span class="s1">&#39;pass&#39;</span><span class="p">,</span> <span class="n">verify_cert</span><span class="p">:</span> <span class="kp">false</span><span class="p">)</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="o">&lt;</span><span class="ss">Icontrol</span><span class="p">:</span><span class="ss">:Client</span><span class="p">:</span><span class="mh">0x007fb953ab7750</span> <span class="vi">@options</span><span class="o">=</span><span class="p">{</span> <span class="o">.</span><span class="n">.</span><span class="o">.</span> <span class="p">}</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>After logging in, one can build a query via an instance method:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">api</span><span class="o">.</span><span class="n">get_sys_dns</span>
</span><span class='line'><span class="c1"># returns an object like this:</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="p">{</span> <span class="s2">&quot;kind&quot;</span>        <span class="o">=&gt;</span> <span class="s2">&quot;tm:sys:dns:dnsstate&quot;</span><span class="p">,</span>
</span><span class='line'>     <span class="s2">&quot;selfLink&quot;</span>    <span class="o">=&gt;</span> <span class="s2">&quot;https://localhost/mgmt/tm/sys/dns?ver=11.5.4&quot;</span><span class="p">,</span>
</span><span class='line'>     <span class="s2">&quot;description&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;configured-by-dhcp&quot;</span><span class="p">,</span>
</span><span class='line'>     <span class="s2">&quot;nameServers&quot;</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;1.2.3.72&quot;</span><span class="p">,</span> <span class="s2">&quot;1.2.3.73&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>     <span class="s2">&quot;search&quot;</span>      <span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;domain.com&quot;</span><span class="o">]</span>
</span><span class='line'>   <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The gem builds REST queries given a method delimited by underscores. The first word is the REST method and the following words are the path you&rsquo;d like to send your request to.</p>

<p>For example, if you&rsquo;d like to get the version of the F5, given this <a href="https://devcentral.f5.com/d/icontrol-rest-api-reference-version-120">iControl REST API doc</a></p>

<p>You&rsquo;d call a method that looks like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">api</span><span class="o">.</span><span class="n">get_sys_version</span>
</span><span class='line'><span class="c1"># returns an object like this:</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="p">{</span> <span class="s2">&quot;kind&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;tm:sys:version:versionstats&quot;</span><span class="p">,</span>
</span><span class='line'>     <span class="s2">&quot;selfLink&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;https://localhost/mgmt/tm/sys/version?ver=12.1.2&quot;</span><span class="p">,</span>
</span><span class='line'>     <span class="s2">&quot;entries&quot;</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>      <span class="s2">&quot;https://localhost/mgmt/tm/sys/version/0&quot;</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;nestedStats&quot;</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>          <span class="s2">&quot;entries&quot;</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>            <span class="s2">&quot;Build&quot;</span>   <span class="o">=&gt;</span> <span class="p">{</span> <span class="s2">&quot;description&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;0.0.249&quot;</span> <span class="p">},</span>
</span><span class='line'>            <span class="s2">&quot;Date&quot;</span>    <span class="o">=&gt;</span> <span class="p">{</span> <span class="s2">&quot;description&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;Wed Nov 30 16:04:00 PST 2016&quot;</span> <span class="p">},</span>
</span><span class='line'>            <span class="s2">&quot;Edition&quot;</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="s2">&quot;description&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;Final&quot;</span> <span class="p">},</span>
</span><span class='line'>            <span class="s2">&quot;Product&quot;</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="s2">&quot;description&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;BIG-IP&quot;</span> <span class="p">},</span>
</span><span class='line'>            <span class="s2">&quot;Title&quot;</span>   <span class="o">=&gt;</span> <span class="p">{</span> <span class="s2">&quot;description&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;Main Package&quot;</span> <span class="p">},</span>
</span><span class='line'>            <span class="s2">&quot;Version&quot;</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="s2">&quot;description&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;12.1.2&quot;</span> <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>So in practice you could put all this together to do something like audit the versions of F5s in a collection:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="s1">&#39;hostname1&#39;</span><span class="p">,</span> <span class="s1">&#39;hostname2&#39;</span><span class="p">,</span> <span class="s1">&#39;hostname3&#39;</span><span class="o">].</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">host</span><span class="o">|</span>
</span><span class='line'>  <span class="n">api</span> <span class="o">=</span> <span class="ss">IcontrolRest</span><span class="p">:</span><span class="ss">:Client</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">host</span><span class="p">:</span> <span class="n">host</span><span class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="s1">&#39;user&#39;</span><span class="p">,</span> <span class="ss">pass</span><span class="p">:</span> <span class="s1">&#39;pass&#39;</span><span class="p">,</span> <span class="n">verify_cert</span><span class="p">:</span> <span class="kp">false</span><span class="p">)</span>
</span><span class='line'>  <span class="n">result</span> <span class="o">=</span> <span class="n">api</span><span class="o">.</span><span class="n">get_sys_version</span>
</span><span class='line'>  <span class="n">version</span> <span class="o">=</span> <span class="n">result</span><span class="o">[</span><span class="s1">&#39;entries&#39;</span><span class="o">][</span><span class="err">‘</span><span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">localhost</span><span class="o">/</span><span class="n">mgmt</span><span class="o">/</span><span class="n">tm</span><span class="o">/</span><span class="n">sys</span><span class="o">/</span><span class="n">version</span><span class="o">/</span><span class="mi">0</span><span class="err">’</span><span class="o">][</span><span class="s1">&#39;nestedStats&#39;</span><span class="o">][</span><span class="s1">&#39;entries&#39;</span><span class="o">][</span><span class="s1">&#39;Version&#39;</span><span class="o">][</span><span class="s1">&#39;description&#39;</span><span class="o">]</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;host: </span><span class="si">#{</span><span class="n">host</span><span class="si">}</span><span class="s2"> | version: </span><span class="si">#{</span><span class="n">version</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">unless</span> <span class="n">version</span> <span class="o">==</span> <span class="err">‘</span><span class="mi">12</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="err">’</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>This would print out the hostname and version of any F5s that aren&rsquo;t on version 12.0.0. This is just one example, I encourage you to look through the iControl REST API docs to get a feeling for what&rsquo;s really possible.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[One Year Calling Innovations Home]]></title>
    <link href="http://engineering.cerner.com/blog/one-year-calling-innovations-home/"/>
    <updated>2018-02-28T00:00:00-06:00</updated>
    <id>http://engineering.cerner.com/blog/one-year-calling-innovations-home</id>
    <content type="html"><![CDATA[<p>One year ago this month, Cerner development associates in Kansas City moved into a new place to call home for their workdays, Innovations Campus. The first two towers that stand on this campus provide 805,000 square feet of workspace for more than 3,000 associates. Eventually, the campus will grow larger, including 16 buildings and 16,000 Cerner associates. As that growth approaches, it is important to reflect on what these first two towers represent for associates and their development careers at Cerner. The investment in this workplace is a testament to Cerner’s dedication to and appreciation of associate values. It is a reflection of who the people at Cerner are and what they strive to be.</p>

<p>Many of the features in the building were designed with input by associates, for associates.  Other spaces and elements of the building were voted on by associates. A Momentum Wall, a series of installations that change and grow with Cerner’s culture and development platforms, capturing architectural history, open source projects and commits, a giant monthly calendar of events, and a continuously changing installation showcasing Cerner’s commitment to usability and solid design. Distinct “Neighborhood Nodes” were designed by committees of development associates to provide opportunities for associate to relax, learn, and create. The game rooms Bowser’s Castle and Flynn’s Arcade are a nod to the sci-fi and gaming culture popular among many development associates at Cerner. The Harry Potter and Lord of the Rings libraries house books and quiet work space for associates to get away and learn. The MakerSpace provides space, machinery and materials for associates to work on personal projects and think about work projects in a different way. Associates voted on various options for workstations and landed on a configurable option that provides flexibility in terms of work space and style. The Assembly provides a space for associates to share and learn, and creates opportunities for ambient conversations for those passing through a meetup or knowledge transfer session. On a normal workday at Innovations you can see how the physical elements embedded in the buildings contribute immensely to our development culture, from the collaborative layout of the campus with unique seating and whiteboards around every corner to unique representations of Cerner’s values and history composed in binary ascii. The functionality and aesthetics of the campus have enhanced the cultural experiences associates have had over the past year. In honor of the one year anniversary in Innovations, we’ve asked a few of our associates for their perspectives on the parts of the campus they interact with daily.</p>

<h4>Associate Reviewer: Ann Dickey, Software Engineer</h4>

<blockquote><p>I love the MakerSpace Neighborhood Node. Not only because it’s given me a chance to learn and use tools I have never used before, but for the networking experience it has turned out to be. I’ve met dozens of associates across Cerner while babysitting a 3D print, or attending the Makerspace learning events the admins host.</p>

<p>We put together a group for ShipIt IX, where we used the MakerSpace to design and create a 3D printed notification template that hooked up with an Arduino and LED light strip we programmed to give the user notifications from their desired apps. ShipIt was a first for all of us, and we wouldn’t have had a project without the availability of the MakerSpace to do 3D printing and soldering. We all had a blast, learned a lot, and plan on doing another ShipIt in the future. Plus, now I have some great embarrassing photos of my team feeding each other ice cream and failing to properly use the outdoor exercise equipment because of the ShipIt scavenger hunt challenge. The funny thing is the MakerSpace is the one neighborhood node I did not vote for when the new Innovations was being built. I had never used a 3D printer, CNC, or laser cutter and, not knowing how, I wasn’t able to imagine a personal use for those tools. But the MakerSpace team put together great tutorials in their training and connected me to resources like Thingiverse and other associates co-using the space that now I am using the space at least once a month to create decorations or make utility pieces for around the house or office. The entire MakerSpace community has been a wonderful addition to my overall experience working here at Cerner. I’ve enjoyed the people, the projects, and the enthusiasm to help each other and share ideas.</p></blockquote>

<p><img class="center" src="http://engineering.cerner.com/assets/2018-02-28-one-year-calling-innovations-home/anniversary-1.jpg" width="500">
<sub>The MakerSpace node serves as an associate space for innovation and exploration equipped with Ultimaker 3D printers, a soldering station, a CNC Carvey and an Epilog Laser.</sub></p>

<p><img class="center" src="http://engineering.cerner.com/assets/2018-02-28-one-year-calling-innovations-home/anniversary-2.jpg" width="500">
<sub>A community of MakerSpace admins host regular workshops for associates to learn new skills or machinery such as this one featuring a laser project.</sub></p>

<h4>Associate Reviewer: Caleb Meyer, Senior Software Engineer</h4>

<blockquote><p>The new Innovations campus shows us that Cerner is a company you can grow with. The old Innovations campus (I’m still refusing to call it Realizations) wasn’t designed for programmers, and certainly not for as many as we have. My team is as collaborative as ever, but now we have space to focus and get good work done. The all wifi floors perfectly represent everyone’s preference to remain wireless (untethered) during the day.</p>

<p>My favorite feature of the campus is the Assembly. I’ve run the Python Developers’ Meetup since its inception across the road (at the former campus), and I remember how ill-suited the game room (8 byte café) was for it. The Assembly is perfect for meetups of any size, and the self-service microphones and projector rock. The DE Tech Talks we’ve had there have all been fantastic, and the external speakers’ Tech Talks are always good as well. When there’s not something going on, the furniture surrounding the Assembly is comfortable, and there’s plenty of outlets for working away from your desk without your battery dying.</p></blockquote>

<div align="center">
  <table>
    <tr>
      <td align="center">
        <img class="center" src="http://engineering.cerner.com/assets/2018-02-28-one-year-calling-innovations-home/anniversary-5.jpg" width="375">
      </td>
      <td align="center">
        <img class="center" src="http://engineering.cerner.com/assets/2018-02-28-one-year-calling-innovations-home/anniversary-6.jpg" width="375">
      </td>
    </tr>
    <tr>
      <td align="center" colspan="2">
        <sub>Spanning two floors in the heart of Innovations, the Assembly is home to many cultural events such as meetups, Tech Talks (be sure to check out our YouTube channel for recordings of our impressive speakers), lightning talks, ShipIt presentations, and more!</sub>
      </td>
    </tr>
  </table>
</div>


<h4>Associate Reviewer: Ryan Grass, Senior Software Engineer</h4>

<blockquote><p>In many ways I feel the new campus is a reflection of the cultural shift Cerner took over half a decade ago to create a fun, creative, and interactive development culture. The cafeteria is practically a food court, offering a range of diverse choices that reflect our many individual associates’ tastes. The work areas are open, and modular, allowing for easy communication between associates; and creativity in customizing your work environment. The many nodes on campus offer creative outlets for innovative minds. Revenue Cycle uses Bowser’s Castle for monthly after work board game meetups. These are not only fun, but great ways to network within our organization. My team has even decided a few times to stay on campus rather than going out for team lunches and play board games over lunch. These have been great opportunities to bond, and become more relaxed around each other.</p></blockquote>

<p><img class="center" src="http://engineering.cerner.com/assets/2018-02-28-one-year-calling-innovations-home/anniversary-7.jpg" width="500">
<sub>Classic and Super Classic Nintendo stations are in both of our game rooms, Flynn’s Arcade and Bowser’s Castle. Associates gravitate to these retro games when they need a short break to look at problem differently. Additionally, you’ll find many associates huddled around our foosball tables during lunch.</sub></p>

<p><img class="center" src="http://engineering.cerner.com/assets/2018-02-28-one-year-calling-innovations-home/anniversary-4.jpg" width="500">
<sub>Pinball is one of the many arcade games we have on-hand in our two game rooms at Innovations. Game of Thrones seems to be a crowd favorite as we wait in anticipation for the final season!</sub></p>

<p><img class="center" src="http://engineering.cerner.com/assets/2018-02-28-one-year-calling-innovations-home/anniversary-8.jpg" width="500">
<sub>Table tennis is a necessity at Innovations. On a daily basis you can find these tables full of associates looking for some mid-day competition during lunch.</sub></p>

<p><img class="center" src="http://engineering.cerner.com/assets/2018-02-28-one-year-calling-innovations-home/anniversary-3.jpg" width="500">
<sub>We have two quaint library nodes at Innovations each with a unique theme: Harry Potter and Lord of the Rings. These spaces are designed for associates who need to escape their desks for a change or want to check out the hundreds of books Cerner offers ranging from technical, UX, medical and management.</sub></p>

<p>Innovations has become an integral part of our development culture here in Kansas City. It has also become a showstopper in the Kansas City workplace architecture and development realm as it recently won the <a href="https://www.bizjournals.com/kansascity/news/2018/01/26/2018-capstone-award-winners.html">Special Judges’ recognition for the Kansas City Business Journal’s 2018 Capstone Awards</a>. We are very proud of our newest campus and can’t wait to see how it grows and transforms physically and culturally over the new few years!</p>
]]></content>
  </entry>
  
</feed>
